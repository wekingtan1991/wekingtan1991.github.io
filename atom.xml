<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>weking 的技术</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2018-07-06T05:48:15.430Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>wekingtan</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>异常捕获代码</title>
    <link href="http://yoursite.com/2018/07/06/%E5%BC%82%E5%B8%B8%E6%8D%95%E8%8E%B7%E4%BB%A3%E7%A0%81/"/>
    <id>http://yoursite.com/2018/07/06/异常捕获代码/</id>
    <published>2018-07-06T05:48:15.000Z</published>
    <updated>2018-07-06T05:48:15.430Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Content Provider 内容提供器</title>
    <link href="http://yoursite.com/2018/07/06/ContentProvider%20%E5%86%85%E5%AE%B9%E6%8F%90%E4%BE%9B%E5%99%A8/"/>
    <id>http://yoursite.com/2018/07/06/ContentProvider 内容提供器/</id>
    <published>2018-07-06T05:26:27.000Z</published>
    <updated>2018-07-08T01:53:52.728Z</updated>
    
    <content type="html"><![CDATA[<h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><p><code>内容提供器</code>主要用于在不同的应用程序之间实现数据共享功能，是 Android 实现跨程序共享数据的标准方式。</p><a id="more"></a><h1 id="运行时权限"><a href="#运行时权限" class="headerlink" title="运行时权限"></a>运行时权限</h1><h2 id="Android-的权限机制"><a href="#Android-的权限机制" class="headerlink" title="Android 的权限机制"></a>Android 的权限机制</h2><p>每个危险权限都属于一个权限组，我们在进行运行时权限处理时使用的是权限名，但是用户一旦同意授权了，那么该权限所对应的权限组中所有的其他权限也会同时被授权。</p><h2 id="在程序运行时申请权限"><a href="#在程序运行时申请权限" class="headerlink" title="在程序运行时申请权限"></a>在程序运行时申请权限</h2><p>1、 首先判断用户是不是已经给我们授权了：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(ContextCompat.checkSelfPermission(Context, Manifest.permission.权限) != PackageManager.PErMISSION_GRANTED)&#123;</span><br><span class="line">  ActivityCompat.requestPermissions(Context, <span class="keyword">new</span> String[]&#123;Manifest.permission.权限&#125;, 常量);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  <span class="comment">//do something</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>2、 如果已经授权就执行逻辑操作；如果没有授权，则调用 <code>ActivityCompat.requestPermissions()</code> 方法，最终回调到 <code>onRequestPermissionResult()</code> 方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestPermissionsResult</span><span class="params">(<span class="keyword">int</span> requestCode, String[] permissions, <span class="keyword">int</span>[] grantResults)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onRequestPermissionsResult(requestCode, permissions, grantResults);</span><br><span class="line">    <span class="keyword">switch</span> (requestCode) &#123;</span><br><span class="line">        <span class="keyword">case</span> 常量:</span><br><span class="line">            <span class="keyword">if</span>(grantResults.length &gt; <span class="number">0</span> &amp;&amp; grantResults[<span class="number">0</span>] == PackageManager.PErMISSION_GRANTED)&#123;</span><br><span class="line">              <span class="comment">//do something</span></span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">              <span class="comment">//do another thing</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        <span class="keyword">default</span>:</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="访问其他程序中的数据"><a href="#访问其他程序中的数据" class="headerlink" title="访问其他程序中的数据"></a>访问其他程序中的数据</h1><p>如果想要访问内容提供器中共享的数据，就一定要借助 ContentResolver 类，通过 Context 的 getContentResolver() 方法获得实例。</p><h2 id="ContentResolver-的基本用法"><a href="#ContentResolver-的基本用法" class="headerlink" title="ContentResolver 的基本用法"></a>ContentResolver 的基本用法</h2><ul><li>insert() ：增加数据</li><li>update() ：更新数据</li><li>delete() ：删除数据</li><li>query()  ：查询数据</li></ul><p>ContentResolver 中的增删改查方法都不是接受表名参数，而是使用一个 Uri 参数代替，即<code>内容 URI</code>。</p><h3 id="关于内容-URI"><a href="#关于内容-URI" class="headerlink" title="关于内容 URI"></a>关于内容 URI</h3><p><code>内容 URI</code> 由 <code>authority</code> 和 <code>path</code> 组成。其中：</p><ul><li><p>authority 是用于对不同的应用程序做区分的，采用程序包命名。例如：com.example.app.Provider。</p></li><li><p>path 是对同一程序不同的表做区分的，通常添加到 authority 后面。例如：com.example.app.Provider/table1，com.example.app.Provider/table2。</p></li></ul><p>解析内容 URI 的方法：<br><code>Uri uri = Uri.parse(&quot;com.example.app.Provider/table1&quot;);</code></p><h3 id="增删改查方法演示"><a href="#增删改查方法演示" class="headerlink" title="增删改查方法演示"></a>增删改查方法演示</h3><h4 id="查"><a href="#查" class="headerlink" title="查"></a>查</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">Cursor cursor = getContentResolver().query(</span><br><span class="line">  uri,</span><br><span class="line">  projection,</span><br><span class="line">  selection,</span><br><span class="line">  selectionArgs,</span><br><span class="line">  sortOrder</span><br><span class="line">  );</span><br></pre></td></tr></table></figure><table><thead><tr><th style="text-align:left">query() 方法参数</th><th style="text-align:left">对应 SQL 部分</th><th style="text-align:left">描述</th></tr></thead><tbody><tr><td style="text-align:left">uri</td><td style="text-align:left">from table_name</td><td style="text-align:left">指定查询某个应用程序下的某一张表</td></tr><tr><td style="text-align:left">projection</td><td style="text-align:left">select column1，column2</td><td style="text-align:left">指定查询的列名</td></tr><tr><td style="text-align:left">selection</td><td style="text-align:left">where column = value</td><td style="text-align:left">指定 where 的约束条件</td></tr><tr><td style="text-align:left">selectionArgs</td><td style="text-align:left">-</td><td style="text-align:left">为 where 中的占位符提供具体的值</td></tr><tr><td style="text-align:left">orderBy</td><td style="text-align:left">order by column1,column2</td><td style="text-align:left">指定查询结果的排序方式</td></tr></tbody></table><p>查询完成后返回的仍然是一个 Cursor 对象，将数据从 Cursor 对象中读取：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span>(cursor != <span class="keyword">null</span>)&#123;</span><br><span class="line">  <span class="keyword">while</span>(cursor.moveToNext())&#123;</span><br><span class="line">    String column1 = cursor.getstring(cursor.getColumnIndex(<span class="string">"column1"</span>));</span><br><span class="line">    <span class="keyword">int</span> column2 = cursor.getInt(cursor.getColumnIndex(<span class="string">"column2"</span>));</span><br><span class="line">  &#125;</span><br><span class="line">  cursor.close();</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="增"><a href="#增" class="headerlink" title="增"></a>增</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ContentValues values = <span class="keyword">new</span> ContentValues();</span><br><span class="line">values.put(<span class="string">"column1"</span>, <span class="string">"text"</span>);</span><br><span class="line">values.put(<span class="string">"column2"</span>, <span class="number">1</span>);</span><br><span class="line">getContentResolver().insert(uri, values);</span><br></pre></td></tr></table></figure><h4 id="改"><a href="#改" class="headerlink" title="改"></a>改</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">ContentValues values = <span class="keyword">new</span> ContentValues();</span><br><span class="line">values.put(<span class="string">"column1"</span>, <span class="string">""</span>);</span><br><span class="line">getContentResolver().update(uri, values, <span class="string">"column1 = ? and column2 = ?"</span>, <span class="keyword">new</span> String[] &#123;<span class="string">"text"</span>, <span class="string">"1"</span>&#125;);</span><br></pre></td></tr></table></figure><h4 id="删"><a href="#删" class="headerlink" title="删"></a>删</h4><p><code>getContentResolver().delete(uri, &quot;column2 = ?&quot;, new String[] {&quot;1&quot;})</code></p><h1 id="创建自己的内容提供器"><a href="#创建自己的内容提供器" class="headerlink" title="创建自己的内容提供器"></a>创建自己的内容提供器</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h1&gt;&lt;p&gt;&lt;code&gt;内容提供器&lt;/code&gt;主要用于在不同的应用程序之间实现数据共享功能，是 Android 实现跨程序共享数据的标准方式。&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="内容提供器" scheme="http://yoursite.com/tags/%E5%86%85%E5%AE%B9%E6%8F%90%E4%BE%9B%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>RecyclerView使用</title>
    <link href="http://yoursite.com/2018/07/05/RecyclerView%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2018/07/05/RecyclerView使用/</id>
    <published>2018-07-05T05:48:59.000Z</published>
    <updated>2018-07-05T05:48:59.578Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Fragment 使用</title>
    <link href="http://yoursite.com/2018/07/05/Fragment%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2018/07/05/Fragment使用/</id>
    <published>2018-07-05T05:48:36.000Z</published>
    <updated>2018-07-08T01:12:54.753Z</updated>
    
    <content type="html"><![CDATA[<h1 id="Fragment-的-add、hide、show"><a href="#Fragment-的-add、hide、show" class="headerlink" title="Fragment 的 add、hide、show"></a>Fragment 的 add、hide、show</h1><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">FragmentHelper</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 添加 Fragment</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fragmentManager</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fragment</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fragmentTag</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">addFragment</span><span class="params">(FragmentManager fragmentManager, Fragment fragment, String fragmentTag)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (fragmentManager != <span class="keyword">null</span>)&#123;</span><br><span class="line">            FragmentTransaction transaction = fragmentManager.beginTransaction();</span><br><span class="line">            transaction.add(R.id.frag_main, fragment, fragmentTag);</span><br><span class="line">            transaction.commit();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 显示已存在的 Fragment</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fragmentManager</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fragment</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">showFragment</span><span class="params">(FragmentManager fragmentManager, Fragment fragment)</span></span>&#123;</span><br><span class="line">        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();</span><br><span class="line">        <span class="keyword">if</span> (fragment != <span class="keyword">null</span>)&#123;</span><br><span class="line">            fragmentTransaction.show(fragment);</span><br><span class="line">            fragmentTransaction.commit();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 隐藏所有的 Fragment</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> fragmentManager</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">hideAllFragment</span><span class="params">(FragmentManager fragmentManager)</span></span>&#123;</span><br><span class="line">        FragmentTransaction fragmentTransaction = fragmentManager.beginTransaction();</span><br><span class="line"></span><br><span class="line">        Fragment dashboard_fragment = fragmentManager.findFragmentByTag(<span class="string">"dashboard_fragment"</span>);</span><br><span class="line">        <span class="keyword">if</span> (dashboard_fragment != <span class="keyword">null</span>)&#123;</span><br><span class="line">            fragmentTransaction.hide(dashboard_fragment);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        fragmentTransaction.commit();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><a href="https://www.jianshu.com/p/d9143a92ad94" target="_blank" rel="noopener">Fragment全解析系列</a></li><li><a href="https://www.jianshu.com/p/662c46cd3b5f" target="_blank" rel="noopener">Fragment你真的熟悉吗？看了才知道</a></li><li><a href="https://www.jianshu.com/p/28ca4cbe190c" target="_blank" rel="noopener">Android基础：Fragment，看这篇就够了</a></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;Fragment-的-add、hide、show&quot;&gt;&lt;a href=&quot;#Fragment-的-add、hide、show&quot; class=&quot;headerlink&quot; title=&quot;Fragment 的 add、hide、show&quot;&gt;&lt;/a&gt;Fragment 的 add、hide、show&lt;/h1&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Fragment" scheme="http://yoursite.com/tags/Fragment/"/>
    
  </entry>
  
  <entry>
    <title>自定义 View</title>
    <link href="http://yoursite.com/2018/07/05/%E8%87%AA%E5%AE%9A%E4%B9%89View/"/>
    <id>http://yoursite.com/2018/07/05/自定义View/</id>
    <published>2018-07-05T05:48:16.000Z</published>
    <updated>2018-07-05T11:03:06.347Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h1><ul><li><p><a href="http://www.gcssloop.com/customview/CustomViewIndex/" target="_blank" rel="noopener">安卓自定义View教程</a></p></li><li><p><a href="https://blog.csdn.net/ccy0122/article/details/53241648" target="_blank" rel="noopener">仿支付宝芝麻信用的仪表盘</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1 id=&quot;参考资料&quot;&gt;&lt;a href=&quot;#参考资料&quot; class=&quot;headerlink&quot; title=&quot;参考资料&quot;&gt;&lt;/a&gt;参考资料&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://www.gcssloop.com/customview/CustomVie
      
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="自定义 View" scheme="http://yoursite.com/tags/%E8%87%AA%E5%AE%9A%E4%B9%89-View/"/>
    
  </entry>
  
  <entry>
    <title>Intent使用</title>
    <link href="http://yoursite.com/2018/07/05/Intent%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2018/07/05/Intent使用/</id>
    <published>2018-07-05T05:47:59.000Z</published>
    <updated>2018-07-05T05:47:59.177Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Service 使用</title>
    <link href="http://yoursite.com/2018/07/05/Service%20%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2018/07/05/Service 使用/</id>
    <published>2018-07-05T05:47:42.000Z</published>
    <updated>2018-07-08T01:10:03.384Z</updated>
    
    <content type="html"><![CDATA[<h1 id="定义"><a href="#定义" class="headerlink" title="定义"></a>定义</h1><blockquote><p><code>服务</code>是 Android 中实现程序后台运行的解决方案，它非常适合去执行那些<code>不需要和用户交互而还要求长期运行的任务</code>。</p></blockquote><p>服务的运行不依赖于任何用户界面，即使程序被切换到后台，或者用户打开了另外一个应用程序，服务仍然能够保持正常运行。但服务不是运行在一个独立的进程中，而是依赖于创建服务时所在的应用程序。当应用程序进程被杀死，服务也会被停止运行。</p><p>服务并不会自动开启线程，默认运行在主线程中。</p><a id="more"></a><h1 id="Android-多线程"><a href="#Android-多线程" class="headerlink" title="Android 多线程"></a>Android 多线程</h1><h2 id="线程基本用法"><a href="#线程基本用法" class="headerlink" title="线程基本用法"></a>线程基本用法</h2><p>1.继承的方式耦合性有点高<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">extends</span> <span class="title">Thread</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//处理具体的逻辑</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">new</span> MyThread().start();</span><br></pre></td></tr></table></figure></p><p>2.实现 Runnable 接口的方式<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">MyThread</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//处理具体的逻辑</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">MyThread myThread = <span class="keyword">new</span> MyThread();</span><br><span class="line"><span class="keyword">new</span> Thread(myThread).start();</span><br></pre></td></tr></table></figure></p><p>3.<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">new</span> Thread(<span class="keyword">new</span> Runnable()&#123;</span><br><span class="line"></span><br><span class="line">  <span class="meta">@Override</span></span><br><span class="line">  <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="comment">//处理具体的逻辑</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;).start();</span><br></pre></td></tr></table></figure></p><h2 id="在子线程中更新-UI"><a href="#在子线程中更新-UI" class="headerlink" title="在子线程中更新 UI"></a>在子线程中更新 UI</h2><p>Android 是不允许在子线程中更新 UI。但它提供了一套<code>异步消息处理机制</code>，可以解决在子线程中进行 UI 操作。</p><ul><li><p>首先在主线程创建一个 Handler，并重写 handleMessage() 方法：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">private</span> Handler handler = <span class="keyword">new</span> Handler()&#123;</span><br><span class="line"></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">handleMessage</span><span class="params">(Message msg)</span></span>&#123;</span><br><span class="line">     <span class="keyword">switch</span> (msg.what)&#123;</span><br><span class="line">       <span class="keyword">case</span> 常量</span><br><span class="line">       <span class="comment">//在这里进行 UI 操作</span></span><br><span class="line">       <span class="keyword">break</span>;</span><br><span class="line">     &#125;</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>在需要更新 UI 的子线程中创建一个 Message 对象：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Message message = <span class="keyword">new</span> Message();</span><br><span class="line">message.what = 常量;</span><br><span class="line">handler.sendMessage(message); <span class="comment">//将 Message 对象发送出去</span></span><br></pre></td></tr></table></figure></li></ul><h2 id="解析异步消息处理机制"><a href="#解析异步消息处理机制" class="headerlink" title="解析异步消息处理机制"></a>解析异步消息处理机制</h2><p>Android 的异步消息处理机制由 4 部分组成：Message、Handler、MessageQueue、Looper。</p><h3 id="Message"><a href="#Message" class="headerlink" title="Message"></a>Message</h3><p>Message 是在线程之间传递消息，可以在内部携带少量消息，用于在不同线程之间交换数据。<code>what</code> 字段携带 String 数据，<code>arg1</code>、<code>arg2</code> 字段携带整型数据，<code>obj</code> 字段携带一个 Object 对象。</p><h3 id="Handler"><a href="#Handler" class="headerlink" title="Handler"></a>Handler</h3><p>主要用于发送和处理消息。<br>发送消息一般用 Handler 的 <code>sendMessage()</code> 方法。<br>接收消息 Handler 的 <code>handleMessage()</code> 方法。</p><h3 id="MessageQueue"><a href="#MessageQueue" class="headerlink" title="MessageQueue"></a>MessageQueue</h3><p>MessageQueue 是消息队列，主要用于存放所有通过 Handler 发送的消息。<code>每个线程只会有一个 MessageQueue 对象</code>。</p><h3 id="Looper"><a href="#Looper" class="headerlink" title="Looper"></a>Looper</h3><p>Looper 是每个线程中的 MessageQueue 管家，调用 Looper 的 <code>loop()</code> 方法后，就会进入一个无限循环，每当发现 MessageQueue 中存在的一条消息，就会将它取出，并传递到 Handler 的 handleMessage() 方法中。<code>每个线程只有一个 Looper 对象</code>。</p><h2 id="使用-AsyncTask"><a href="#使用-AsyncTask" class="headerlink" title="使用 AsyncTask"></a>使用 AsyncTask</h2><p>由于 AsyncTask 是一个抽象类，所以我们需要<code>创建一个子类去继承</code>。</p><h3 id="AsyncTask-类的-3-个泛型参数："><a href="#AsyncTask-类的-3-个泛型参数：" class="headerlink" title="AsyncTask 类的 3 个泛型参数："></a>AsyncTask 类的 3 个泛型参数：</h3><ul><li>Params ：在执行 AsyncTask 时需要传入的参数，可用于在后台任务中使用。</li><li>Progress ：后台任务执行时，如果需要在界面上显示当前的进度，则使用这里指定的泛型为进度单位。</li><li>Result ：当任务执行完毕后，如果需要对结果进行返回，则使用这里指定的泛型作为返回值类型。</li></ul><h3 id="AsyncTask-几个方法："><a href="#AsyncTask-几个方法：" class="headerlink" title="AsyncTask 几个方法："></a>AsyncTask 几个方法：</h3><ul><li><p>onPreExecute() ：<br>这个方法会在<code>后台任务开始执行之前调用</code>，用于进行一些界面上的初始化操作，比如显示一个进度条对话框。</p></li><li><p>doInBackground(Params…) :<br>1、 所有代码都会在子线程中运行；<br>2、 任务一旦完成就会返回 return 语句，但如果 AsyncTask 第三个泛型参数为 Void，则不返回任务执行结果；<br>3、 这个方法中不可以执行 UI 操作，如果要执行 UI 操作，则可以调用 publishProgress(Progress…) 方法完成；</p></li><li><p>onProgressUpdate(Progress…) ：<br>当后台任务中调用 publishProgress(Progress…) 方法后，onProgressUpdate(Progress…) 方法就会调用。</p></li><li><p>onPostExcute(Result) ：<br>当<code>后台任务执行完毕</code>并通过 return 语句执行返回时，这个方法就会调用。</p></li></ul><h3 id="AsyncTask-总结"><a href="#AsyncTask-总结" class="headerlink" title="AsyncTask 总结"></a>AsyncTask 总结</h3><p>doInBackground(Params…) 执行具体的耗时任务；<br>onProgressUpdate(Progress…) 进行更新 UI；<br>onProgressUpdate(Progress…) 执行任务收尾；</p><p>启动这个任务：<code>new targetTask().execute();</code></p><h1 id="服务的基本用法"><a href="#服务的基本用法" class="headerlink" title="服务的基本用法"></a>服务的基本用法</h1><h2 id="定义一个服务"><a href="#定义一个服务" class="headerlink" title="定义一个服务"></a>定义一个服务</h2><p>创建一个 Service 并在 AndroidManifest 中注册，其中 <code>Exported</code> 属性表示是否允许除了当前程序之外的其他程序访问这个服务，<code>Enabled</code> 属性表示是否启用这个服务。</p><h2 id="活动和服务进行通信"><a href="#活动和服务进行通信" class="headerlink" title="活动和服务进行通信"></a>活动和服务进行通信</h2><ol><li>创建一个子类继承 Service</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">xxxService</span> <span class="keyword">extends</span> <span class="title">Service</span></span>&#123;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">private</span> <span class="keyword">final</span> IBinder mBinder = <span class="keyword">new</span> LocalBinder();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">LocalBinder</span> <span class="keyword">extends</span> <span class="title">Binder</span> </span>&#123;</span><br><span class="line">        <span class="function"><span class="keyword">public</span> xxxService <span class="title">getService</span><span class="params">()</span> </span>&#123;</span><br><span class="line">            <span class="keyword">return</span> xxxService.<span class="keyword">this</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> IBinder <span class="title">onBind</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> mBinder;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ol start="2"><li>在 Activity/Fragment 中调用 Service：</li></ol><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">MainActivity</span> <span class="keyword">extends</span> <span class="title">AppCompatActivity</span></span>&#123;</span><br><span class="line">  <span class="keyword">private</span> xxxService.LocalBinder localBinder;</span><br><span class="line">  <span class="keyword">private</span> xxxService mxxxService;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 绑定 xxxService 服务结果回调</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="keyword">private</span> ServiceConnection serviceConnection = <span class="keyword">new</span> ServiceConnection() &#123;</span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceConnected</span><span class="params">(ComponentName name, IBinder service)</span> </span>&#123;</span><br><span class="line">            localBinder = (xxxService.LocalBinder) service; <span class="comment">//通过向下转型得到 localBinder 实例</span></span><br><span class="line">            mxxxService = localBinder.getService();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="meta">@Override</span></span><br><span class="line">        <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServiceDisconnected</span><span class="params">(ComponentName name)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCreate</span><span class="params">(Bundle savedInstanceState)</span> </span>&#123;</span><br><span class="line">       <span class="keyword">super</span>.onCreate(savedInstanceState);</span><br><span class="line"></span><br><span class="line">       Intent bindIntent = <span class="keyword">new</span> Intent(<span class="keyword">this</span>, xxxService.class);</span><br><span class="line">       bindService(bindIntent, serviceConnection, Context.BIND_AUTO_CREATE); <span class="comment">//绑定服务获取持久连接</span></span><br><span class="line">   &#125;</span><br><span class="line"></span><br><span class="line">   <span class="meta">@Override</span></span><br><span class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">       <span class="keyword">super</span>.onDestroy();</span><br><span class="line">       unbindService(serviceConnection);</span><br><span class="line">   &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h1 id="服务的更多技巧"><a href="#服务的更多技巧" class="headerlink" title="服务的更多技巧"></a>服务的更多技巧</h1><h2 id="使用前台服务"><a href="#使用前台服务" class="headerlink" title="使用前台服务"></a>使用前台服务</h2><p>前台服务和普通服务最大区别是，它会一直有一个正在运行的图标在系统的状态栏显示，下拉状态栏可以看到更加详细的信息。类似于彩云天气的前台服务效果。</p><h2 id="使用-IntentService"><a href="#使用-IntentService" class="headerlink" title="使用 IntentService"></a>使用 IntentService</h2><p>一个异步的、会自动停止的服务。<code>onHandleIntent(Intent intent)</code> 方法运行在子线程中。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">xxxIntentService</span> <span class="keyword">extends</span> <span class="title">IntentService</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="title">xxxIntentService</span><span class="params">()</span></span>&#123;</span><br><span class="line">      <span class="keyword">super</span>(<span class="string">"xxxIntentService"</span>); <span class="comment">//调用父类的有参构造函数</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onHandleIntent</span><span class="params">(Intent intent)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">      <span class="comment">//当前的逻辑已经在子线程中运行</span></span><br><span class="line"></span><br><span class="line">      <span class="comment">//打印当前线程的 id</span></span><br><span class="line">      Log.d(<span class="string">"xxxIntentService"</span>, <span class="string">"Thread id is"</span> + Thread.currentThread().getId());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">protected</span> <span class="keyword">void</span> <span class="title">onDestroy</span><span class="params">()</span> </span>&#123;</span><br><span class="line">      <span class="keyword">super</span>.onDestroy();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;定义&quot;&gt;&lt;a href=&quot;#定义&quot; class=&quot;headerlink&quot; title=&quot;定义&quot;&gt;&lt;/a&gt;定义&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;&lt;code&gt;服务&lt;/code&gt;是 Android 中实现程序后台运行的解决方案，它非常适合去执行那些&lt;code&gt;不需要和用户交互而还要求长期运行的任务&lt;/code&gt;。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;服务的运行不依赖于任何用户界面，即使程序被切换到后台，或者用户打开了另外一个应用程序，服务仍然能够保持正常运行。但服务不是运行在一个独立的进程中，而是依赖于创建服务时所在的应用程序。当应用程序进程被杀死，服务也会被停止运行。&lt;/p&gt;
&lt;p&gt;服务并不会自动开启线程，默认运行在主线程中。&lt;/p&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Service" scheme="http://yoursite.com/tags/Service/"/>
    
      <category term="线程" scheme="http://yoursite.com/tags/%E7%BA%BF%E7%A8%8B/"/>
    
  </entry>
  
  <entry>
    <title>Broadcast 使用</title>
    <link href="http://yoursite.com/2018/07/05/Broadcast%20%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2018/07/05/Broadcast 使用/</id>
    <published>2018-07-05T05:47:25.000Z</published>
    <updated>2018-07-07T03:18:41.593Z</updated>
    
    <content type="html"><![CDATA[<h1 id="广播机制"><a href="#广播机制" class="headerlink" title="广播机制"></a>广播机制</h1><ul><li>标准广播  完全异步执行，所有广播接收器同时接收</li><li>有序广播 同步执行，同一时刻只有一个广播接收器可以接收</li></ul><a id="more"></a><h1 id="接收系统广播"><a href="#接收系统广播" class="headerlink" title="接收系统广播"></a>接收系统广播</h1><h2 id="动态注册监听网络变化"><a href="#动态注册监听网络变化" class="headerlink" title="动态注册监听网络变化"></a>动态注册监听网络变化</h2><p>动态注册的广播接收器可以随意地控制注册和注销，但必须要在程序启动之后才能街道广播。</p><h2 id="静态注册实现开机启动"><a href="#静态注册实现开机启动" class="headerlink" title="静态注册实现开机启动"></a>静态注册实现开机启动</h2><h1 id="发送自定义广播"><a href="#发送自定义广播" class="headerlink" title="发送自定义广播"></a>发送自定义广播</h1><h2 id="发送标准广播"><a href="#发送标准广播" class="headerlink" title="发送标准广播"></a>发送标准广播</h2><h2 id="发送有序广播"><a href="#发送有序广播" class="headerlink" title="发送有序广播"></a>发送有序广播</h2><p>使用 <code>sendOrderBrocast()</code> 发送广播，同时需要在 AndroidManifest 中设置优先级 <code>&lt;intent-filter android:priority= &gt;</code></p><h1 id="使用本地广播"><a href="#使用本地广播" class="headerlink" title="使用本地广播"></a>使用本地广播</h1><p><code>LocalBroadcastManger</code> 来管理广播。<br><code>LocalBroadcastManger localBroadcastmanger = LocalBroadcastManger.getInstance(this);</code> 获取 <code>LocalBroadcastManger</code> 实例。<br><code>localBroadcastmanger.sendBroadcast()</code> 发送广播。<br><code>localBroadcastmanger.registerReceiver()</code> 注册广播。<br><code>localBroadcastmanger.unregisterReceiver()</code> 注销广播。</p><h1 id="利用广播实现强制下线功能"><a href="#利用广播实现强制下线功能" class="headerlink" title="利用广播实现强制下线功能"></a>利用广播实现强制下线功能</h1><ol><li><p>首先定义一个活动回收器 <code>ActivityCollector</code> 类，创建一个列表来管理活动，<code>ActivityCollector</code> 类里面包含添加活动 <code>addActivity</code>、移除活动 <code>removeActivity</code>、结束活动 <code>finishAll</code> 的方法。</p></li><li><p>创建一个 <code>BaseActivity</code> 类作为所有活动的父类，同时复写 <code>onCreate</code> 添加 <code>addActivity</code> 方法；复写 <code>onDestroy</code> 添加 <code>removeActivity</code> 方法；复写 <code>onResume</code> 在里面注册广播；复写 <code>onPause</code> 在里面注销广播；在 <code>ForceOfflineReceiver</code> 的 <code>onReceive</code> 方法里面放入 <code>finishAll</code> 方法。</p></li><li><p>让需要实现强制下线功能的 Activity 继承 <code>BaseActivity</code> 类，同时发送强制下线功能的广播。</p></li></ol><h1 id="利用静态广播实现-APP-开机自动启动"><a href="#利用静态广播实现-APP-开机自动启动" class="headerlink" title="利用静态广播实现 APP 开机自动启动"></a>利用静态广播实现 APP 开机自动启动</h1>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;广播机制&quot;&gt;&lt;a href=&quot;#广播机制&quot; class=&quot;headerlink&quot; title=&quot;广播机制&quot;&gt;&lt;/a&gt;广播机制&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;标准广播  完全异步执行，所有广播接收器同时接收&lt;/li&gt;
&lt;li&gt;有序广播 同步执行，同一时刻只有一个广播接收器可以接收&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>ViewPager使用</title>
    <link href="http://yoursite.com/2018/07/05/ViewPager%E4%BD%BF%E7%94%A8/"/>
    <id>http://yoursite.com/2018/07/05/ViewPager使用/</id>
    <published>2018-07-05T05:47:02.000Z</published>
    <updated>2018-07-05T05:47:02.958Z</updated>
    
    <summary type="html">
    
    </summary>
    
    
  </entry>
  
  <entry>
    <title>Java 获取时间日期方法</title>
    <link href="http://yoursite.com/2018/07/05/Java%20%E8%8E%B7%E5%8F%96%E5%BD%93%E5%89%8D%E6%97%B6%E9%97%B4%E6%96%B9%E6%B3%95/"/>
    <id>http://yoursite.com/2018/07/05/Java 获取当前时间方法/</id>
    <published>2018-07-05T05:46:33.000Z</published>
    <updated>2018-07-08T01:12:54.753Z</updated>
    
    <content type="html"><![CDATA[<h2 id="单个获取年、月、日、时、分"><a href="#单个获取年、月、日、时、分" class="headerlink" title="单个获取年、月、日、时、分"></a>单个获取年、月、日、时、分</h2><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getYear</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="comment">//获取系统的日期</span></span><br><span class="line">        Calendar calendar = Calendar.getInstance();</span><br><span class="line">        <span class="comment">//年</span></span><br><span class="line">        <span class="keyword">int</span> year = calendar.get(Calendar.YEAR);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> year;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMonth</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Calendar calendar = Calendar.getInstance();</span><br><span class="line"></span><br><span class="line">        <span class="comment">//月份需要加 1，因为是从 0 开始算的</span></span><br><span class="line">        <span class="keyword">int</span> month = calendar.get(Calendar.MONTH) + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> month;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getDay</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Calendar calendar = Calendar.getInstance();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> day = calendar.get(Calendar.DAY_OF_MONTH);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> day;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getHour</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Calendar calendar = Calendar.getInstance();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> hour = calendar.get(Calendar.HOUR_OF_DAY);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> hour;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getMinute</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Calendar calendar = Calendar.getInstance();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">int</span> minute = calendar.get(Calendar.MINUTE);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> minute;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="获取当前时间"><a href="#获取当前时间" class="headerlink" title="获取当前时间"></a>获取当前时间</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取当前时间的年月日</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">simpleDate</span><span class="params">()</span></span>&#123;</span><br><span class="line">        SimpleDateFormat simpleDateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy年MM月dd日"</span>);</span><br><span class="line">        Date date = <span class="keyword">new</span> Date(System.currentTimeMillis());</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> simpleDateFormat.format(date);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="以当前时间为原点，往前或往后查询某一天"><a href="#以当前时间为原点，往前或往后查询某一天" class="headerlink" title="以当前时间为原点，往前或往后查询某一天"></a>以当前时间为原点，往前或往后查询某一天</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 显示某一日的数据</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> dateIndex</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getDisplayOffsetDate</span><span class="params">(<span class="keyword">int</span> dateIndex)</span></span>&#123;</span><br><span class="line">        SimpleDateFormat simpleDateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy年MM月dd日"</span>);</span><br><span class="line">        <span class="keyword">if</span> (dateIndex == <span class="number">0</span>)&#123;</span><br><span class="line">            Date date = <span class="keyword">new</span> Date(System.currentTimeMillis());</span><br><span class="line">            <span class="keyword">return</span> simpleDateFormat.format(date);</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            Date beginDate = <span class="keyword">new</span> Date();<span class="comment">//获取当天 年月日+时间+时区</span></span><br><span class="line">            Calendar date = Calendar.getInstance();<span class="comment">//获取当天更加详细时间</span></span><br><span class="line">            date.setTime(beginDate);</span><br><span class="line">            date.set(Calendar.DATE, date.get(Calendar.DATE) + dateIndex);</span><br><span class="line">            Date endDate = <span class="keyword">null</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                endDate = simpleDateFormat.parse(simpleDateFormat.format(date.getTime()));</span><br><span class="line">            &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">return</span> simpleDateFormat.format(endDate);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>如果查询某一年、某一月，则改变 <code>Calendar.DATE</code> 为 <code>YEAR</code> 或 <code>MONTH</code>。</p><h2 id="查询某一个月有多少天"><a href="#查询某一个月有多少天" class="headerlink" title="查询某一个月有多少天"></a>查询某一个月有多少天</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 查询某一个月一共有多少天</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> date</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">getDaysOfMonth</span><span class="params">(String date)</span></span>&#123;</span><br><span class="line">    SimpleDateFormat simpleDateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy年MM月"</span>);</span><br><span class="line">    Date timeMillis = <span class="keyword">new</span> Date();</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        timeMillis = simpleDateFormat.parse(date);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    Calendar calendar = Calendar.getInstance();</span><br><span class="line">    calendar.setTime(timeMillis);</span><br><span class="line">    <span class="keyword">return</span> calendar.getActualMaximum(Calendar.DAY_OF_MONTH);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="设置-calendar-的时间为-2000-01-01-00-00，并获取-1970至2000-01-01-00-00时间的毫秒"><a href="#设置-calendar-的时间为-2000-01-01-00-00，并获取-1970至2000-01-01-00-00时间的毫秒" class="headerlink" title="设置 calendar 的时间为 2000-01-01-00-00，并获取 1970至2000-01-01-00-00时间的毫秒"></a>设置 calendar 的时间为 2000-01-01-00-00，并获取 1970至2000-01-01-00-00时间的毫秒</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 2000-01-01-00-00</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Calendar <span class="title">get20000101Datetime</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    Calendar cal_ = Calendar.getInstance();</span><br><span class="line">    cal_.set(Calendar.YEAR, <span class="number">2000</span>);</span><br><span class="line">    cal_.set(Calendar.MONTH, Calendar.JANUARY);</span><br><span class="line">    cal_.set(Calendar.DATE, <span class="number">1</span>);</span><br><span class="line">    cal_.set(Calendar.HOUR_OF_DAY, <span class="number">0</span>);</span><br><span class="line">    cal_.set(Calendar.MINUTE, <span class="number">0</span>);</span><br><span class="line">    cal_.set(Calendar.SECOND, <span class="number">0</span>);</span><br><span class="line">    cal_.set(Calendar.MILLISECOND, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> cal_;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//设置 calendar 的时间为 2000-01-01-00-00</span></span><br><span class="line">Calendar calendar = get20000101Datetime();</span><br><span class="line"><span class="comment">//setTimeInMillis 为 （1970至2000-01-01-00-00时间的毫秒）</span></span><br><span class="line">calendar.getTimeInMillis();</span><br></pre></td></tr></table></figure><h2 id="把-String-类型的日期，转换为日期的毫秒数"><a href="#把-String-类型的日期，转换为日期的毫秒数" class="headerlink" title="把 String 类型的日期，转换为日期的毫秒数"></a>把 String 类型的日期，转换为日期的毫秒数</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 把 String 类型的日期，转换为日期的毫秒数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> i</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Long <span class="title">stringToDateMillis</span><span class="params">(String i)</span></span>&#123;</span><br><span class="line">    SimpleDateFormat simpleDateFormat = <span class="keyword">new</span> SimpleDateFormat(<span class="string">"yyyy年MM月dd日 HH:mm"</span>);<span class="comment">//24小时制</span></span><br><span class="line">    <span class="keyword">long</span> timeMillis = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        timeMillis = simpleDateFormat.parse(i).getTime();</span><br><span class="line">    &#125; <span class="keyword">catch</span> (ParseException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> timeMillis;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;单个获取年、月、日、时、分&quot;&gt;&lt;a href=&quot;#单个获取年、月、日、时、分&quot; class=&quot;headerlink&quot; title=&quot;单个获取年、月、日、时、分&quot;&gt;&lt;/a&gt;单个获取年、月、日、时、分&lt;/h2&gt;
    
    </summary>
    
      <category term="Java" scheme="http://yoursite.com/categories/Java/"/>
    
    
      <category term="Java" scheme="http://yoursite.com/tags/Java/"/>
    
      <category term="时间" scheme="http://yoursite.com/tags/%E6%97%B6%E9%97%B4/"/>
    
  </entry>
  
  <entry>
    <title>BLE 开发知识</title>
    <link href="http://yoursite.com/2018/07/05/BLE%20%E5%BC%80%E5%8F%91%E7%9F%A5%E8%AF%86/"/>
    <id>http://yoursite.com/2018/07/05/BLE 开发知识/</id>
    <published>2018-07-05T05:20:32.000Z</published>
    <updated>2018-07-08T01:12:54.743Z</updated>
    
    <content type="html"><![CDATA[<h1 id="开发流程"><a href="#开发流程" class="headerlink" title="开发流程"></a>开发流程</h1><h2 id="声明-BLE-权限"><a href="#声明-BLE-权限" class="headerlink" title="声明 BLE 权限"></a>声明 BLE 权限</h2><p>在 AndroidManifest 中添加：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.BLUETOOTH"</span> /&gt;</span><br><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.BLUETOOTH_ADMIN"</span> /&gt;</span><br><span class="line">&lt;!-- <span class="number">6.0</span> 之后需要位置权限--&gt;</span><br><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.ACCESS_COARSE_LOCATION"</span> /&gt;</span><br><span class="line">&lt;uses-permission android:name=<span class="string">"android.permission.ACCESS_FINE_LOCATION"</span> /&gt;</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="获取-BluetoothAdapter-实例"><a href="#获取-BluetoothAdapter-实例" class="headerlink" title="获取 BluetoothAdapter 实例"></a>获取 BluetoothAdapter 实例</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化本地蓝牙</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">boolean</span> <span class="title">initBLE</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (mBluetoothManager == <span class="keyword">null</span>) &#123;</span><br><span class="line">        mBluetoothManager = (BluetoothManager) getSystemService(Context.BLUETOOTH_SERVICE);</span><br><span class="line">        <span class="keyword">if</span> (mBluetoothManager == <span class="keyword">null</span>) &#123;</span><br><span class="line">            LogUtil.e(TAG, <span class="string">"Unable to initialize BluetoothManager."</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    mBluetoothAdapter = mBluetoothManager.getAdapter();</span><br><span class="line">    <span class="keyword">if</span> (mBluetoothAdapter == <span class="keyword">null</span>) &#123;</span><br><span class="line">        LogUtil.e(TAG, <span class="string">"Unable to obtain a BluetoothAdapter."</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="动态申请定位权限"><a href="#动态申请定位权限" class="headerlink" title="动态申请定位权限"></a>动态申请定位权限</h2><p>Android 6.0 系统以上开启蓝牙还需要定位权限，定位权限属于危险权限，需要动态申请：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initPermission</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (ContextCompat.checkSelfPermission(MainActivity.<span class="keyword">this</span>,</span><br><span class="line">            Manifest.permission.ACCESS_COARSE_LOCATION)</span><br><span class="line">            != PackageManager.PERMISSION_GRANTED) &#123;</span><br><span class="line">              ……………………</span><br><span class="line">        <span class="comment">//请求权限</span></span><br><span class="line">        requestPermissions(<span class="keyword">new</span> String[]&#123;Manifest.permission.WRITE_CONTACTS&#125;,</span><br><span class="line">                MY_PERMISSIONS_REQUEST_ACCESS_COARSE_LOCATION);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如果是在 Fragment 中使用，则是</p><p><code>xxxFragment.this.requestPermissions</code></p><p><code>requestPermissions</code> 的回调方法是</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@Override</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onRequestPermissionsResult</span><span class="params">(<span class="keyword">int</span> requestCode, @NonNull String[] permissions, @NonNull <span class="keyword">int</span>[] grantResults)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">super</span>.onRequestPermissionsResult(requestCode, permissions, grantResults);</span><br><span class="line">    <span class="keyword">switch</span> (requestCode) &#123;</span><br><span class="line">        <span class="keyword">case</span> MY_PERMISSIONS_REQUEST_ACCESS_COARSE_LOCATION:</span><br><span class="line">            Toast.makeText(getActivity(), <span class="string">"已经可以定位了"</span>, Toast.LENGTH_SHORT).show();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="请求位置服务"><a href="#请求位置服务" class="headerlink" title="请求位置服务"></a>请求位置服务</h2><p>判断是否开启定位功能<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 开启定位功能</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isLocationEnable</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">    LocationManager locationManager = (LocationManager) context.getSystemService(Context.LOCATION_SERVICE);</span><br><span class="line">    <span class="keyword">boolean</span> networkProvider = locationManager.isProviderEnabled(LocationManager.NETWORK_PROVIDER);</span><br><span class="line">    <span class="keyword">boolean</span> gpsProvider = locationManager.isProviderEnabled(LocationManager.GPS_PROVIDER);</span><br><span class="line">    <span class="keyword">if</span> (networkProvider || gpsProvider) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>开启定位服务<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取定位服务</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> context</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">setLocationService</span><span class="params">(Context context)</span> </span>&#123;</span><br><span class="line">    Intent locationIntent = <span class="keyword">new</span> Intent(Settings.ACTION_LOCATION_SOURCE_SETTINGS);</span><br><span class="line">    ((Activity) context).startActivityForResult(locationIntent, Global.REQUEST_CODE_LOCATION_SETTINGS);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><h2 id="扫描设备"><a href="#扫描设备" class="headerlink" title="扫描设备"></a>扫描设备</h2><p>在 android 6.0 中，使用 BluetoothLeScanner.startScan() 来扫描的：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 扫描 BLE 设备</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> enable</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">scanDevices</span><span class="params">(<span class="keyword">boolean</span> enable)</span> </span>&#123;</span><br><span class="line">    LogUtil.i(TAG, <span class="string">"BluetoothAdapter 状态："</span> + mBluetoothAdapter.getState());</span><br><span class="line">    <span class="keyword">if</span> (enable) &#123;</span><br><span class="line">          <span class="comment">/*new Handler().postDelayed(new Runnable() &#123;</span></span><br><span class="line"><span class="comment">            @Override</span></span><br><span class="line"><span class="comment">            public void run() &#123;</span></span><br><span class="line"><span class="comment">                mBluetoothAdapter.getBluetoothLeScanner().stopScan(mScanCallback);</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">        &#125;, 3000);*/</span></span><br><span class="line"></span><br><span class="line">        LogUtil.i(TAG, <span class="string">"正在搜索设备…………"</span>);</span><br><span class="line">        mBluetoothAdapter.getBluetoothLeScanner().startScan(mScanCallback);</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        LogUtil.i(TAG, <span class="string">"停止搜索设备"</span>);</span><br><span class="line">        mBluetoothAdapter.getBluetoothLeScanner().stopScan(mScanCallback);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">private</span> ScanCallback mScanCallback = <span class="keyword">new</span> ScanCallback() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onScanResult</span><span class="params">(<span class="keyword">int</span> callbackType, ScanResult result)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onScanResult(callbackType, result);</span><br><span class="line">        Bundle data = <span class="keyword">new</span> Bundle();</span><br><span class="line">        data.putParcelable(BluetoothDevice.EXTRA_DEVICE, result.getDevice());</span><br><span class="line"></span><br><span class="line">        Intent intent = <span class="keyword">new</span> Intent();</span><br><span class="line">        intent.setAction(ACTION_DEVICE_FOUND);</span><br><span class="line">        intent.putExtras(data);</span><br><span class="line">        sendBroadcast(intent);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="注册广播"><a href="#注册广播" class="headerlink" title="注册广播"></a>注册广播</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 初始化广播</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">initBroadcastReceiver</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    IntentFilter intentFilter = <span class="keyword">new</span> IntentFilter();</span><br><span class="line"></span><br><span class="line">    intentFilter.addAction(BluetoothAdapter.ACTION_STATE_CHANGED);</span><br><span class="line">    intentFilter.addAction(BluetoothService.ACTION_DEVICE_FOUND);</span><br><span class="line">    intentFilter.addAction(BluetoothService.ACTION_GATT_SERVICES_DISCOVERED_SUCCESS);</span><br><span class="line">    intentFilter.addAction(BluetoothService.ACTION_GATT_DESCRIPTOR_WRITE_SUCCESS);</span><br><span class="line">    intentFilter.addAction(BluetoothService.ACTION_GATT_CHARACTERISTIC_WRITE_SUCCESS);</span><br><span class="line">    intentFilter.addAction(BluetoothService.ACTION_GATT_CHARACTERISTIC_DATA_REPLY);</span><br><span class="line"></span><br><span class="line">    registerReceiver(broadcastReceiver, intentFilter);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 广播接收器</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> BroadcastReceiver broadcastReceiver = <span class="keyword">new</span> BroadcastReceiver() &#123;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onReceive</span><span class="params">(Context context, Intent intent)</span> </span>&#123;</span><br><span class="line">        String action = intent.getAction();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (action.equals(BluetoothAdapter.ACTION_STATE_CHANGED)) &#123;</span><br><span class="line">            …………</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br></pre></td></tr></table></figure><h2 id="连接设备"><a href="#连接设备" class="headerlink" title="连接设备"></a>连接设备</h2><p>需要获取 <code>BluetoothGATT</code> 再进行操作：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 连接目标 BLE 设备</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> address</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">connect</span><span class="params">(<span class="keyword">final</span> String address)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mBluetoothAdapter == <span class="keyword">null</span> || address == <span class="keyword">null</span>) &#123;</span><br><span class="line">        LogUtil.e(TAG, <span class="string">"BluetoothAdapter not initialized or unspecified address."</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">final</span> BluetoothDevice device = mBluetoothAdapter.getRemoteDevice(address);</span><br><span class="line">    <span class="keyword">if</span> (device == <span class="keyword">null</span>) &#123;</span><br><span class="line">        LogUtil.e(TAG, <span class="string">"Device not found.  Unable to connect."</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// We want to directly connect to the device, so we are setting the autoConnect</span></span><br><span class="line">    <span class="comment">// parameter to false.</span></span><br><span class="line">    mBluetoothGatt = device.connectGatt(<span class="keyword">this</span>, <span class="keyword">false</span>, mGattCallback);</span><br><span class="line">    LogUtil.i(TAG, <span class="string">"成功连接上设备："</span> + device.getName());</span><br><span class="line">    LogUtil.i(TAG, <span class="string">"------------Create a new connection.------------"</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>当 GATT 客户端连接上或者连接状态改变时，调用 <code>onConnectionStateChange</code>。</p><p>如果使用：<code>device.connectGatt(Context context, boolean autoConnect, BluetoothGattCallback callback, int transport)</code></p><p>根据源码 <code>@param transport preferred transport for GATT connections to remote dual-mode devices</code><br>跟双模设备连接，<code>transport</code> 如果不传默认 <code>TRANSPORT_AUTO</code>，6.0系统及以上需要使用 <code>TRANSPORT_LE</code> 这种传输模式。</p><h2 id="发现服务"><a href="#发现服务" class="headerlink" title="发现服务"></a>发现服务</h2><p>当使用 <code>mBluetoothGatt.discoverServices()</code> 时，则调用 <code>onServicesDiscovered</code>。</p><h2 id="获取-BluetoothGattService-和-BluetoothGattCharacteristic"><a href="#获取-BluetoothGattService-和-BluetoothGattCharacteristic" class="headerlink" title="获取 BluetoothGattService 和 BluetoothGattCharacteristic"></a>获取 BluetoothGattService 和 BluetoothGattCharacteristic</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取 BluetoothGattService</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bluetoothGatt</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> uuid_service</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> BluetoothGattService <span class="title">getBluetoothGATTService</span><span class="params">(BluetoothGatt bluetoothGatt, UUID uuid_service)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (mBluetoothGatt != <span class="keyword">null</span>) &#123;</span><br><span class="line">            BluetoothGattService bluetoothGattService = mBluetoothGatt.getService(uuid_service);</span><br><span class="line">            <span class="keyword">if</span> (bluetoothGattService != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="comment">//LogUtil.i(TAG, "成功获取 bluetoothGattService：" + uuid_service);</span></span><br><span class="line">                <span class="keyword">return</span> bluetoothGattService;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                LogUtil.e(TAG, <span class="string">"bluetoothgatt get service uuid:"</span> + uuid_service + <span class="string">" is null"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            LogUtil.e(TAG, <span class="string">"mBluetoothGatt is null"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 获取 BluetoothGattCharacteristic</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> bluetoothGattService</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> uuid_characteristic</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@return</span></span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> BluetoothGattCharacteristic <span class="title">getBluetoothGattCharacteristic</span><span class="params">(BluetoothGattService bluetoothGattService, UUID uuid_characteristic)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (bluetoothGattService != <span class="keyword">null</span>) &#123;</span><br><span class="line">            BluetoothGattCharacteristic bluetoothGattCharacteristic = bluetoothGattService.getCharacteristic(uuid_characteristic);</span><br><span class="line">            <span class="keyword">if</span> (bluetoothGattCharacteristic != <span class="keyword">null</span>) &#123;</span><br><span class="line">                <span class="comment">//LogUtil.i(TAG, "成功获取 bluetoothGattCharacteristic：" + uuid_characteristic);</span></span><br><span class="line">                <span class="keyword">return</span> bluetoothGattCharacteristic;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                LogUtil.e(TAG, <span class="string">"bluetoothGattService get characteristic uuid:"</span> + uuid_characteristic + <span class="string">" is null"</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            LogUtil.e(TAG, <span class="string">"bluetoothGattService is null"</span>);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h2 id="开启通知，并且写入-Descriptor"><a href="#开启通知，并且写入-Descriptor" class="headerlink" title="开启通知，并且写入 Descriptor"></a>开启通知，并且写入 Descriptor</h2><p><code>WriteCharacteristic()</code> 后有数据返回，则需要先：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment">     * 设置 Characteristic 通知属性，并且写上 Descriptor</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">setCharacteristicNotifyAndWriteDescriptor</span><span class="params">(UUID uuid_service, UUID uuid_characteristic, UUID uuid_descriptor)</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">        BluetoothGattService mBluetoothGattService = getBluetoothGATTService(mBluetoothGatt, uuid_service);</span><br><span class="line"></span><br><span class="line">        BluetoothGattCharacteristic mBluetoothGattCharacteristic = getBluetoothGattCharacteristic(mBluetoothGattService, uuid_characteristic);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (mBluetoothGatt != <span class="keyword">null</span> &amp;&amp; mBluetoothGattCharacteristic != <span class="keyword">null</span>) &#123;</span><br><span class="line">            mBluetoothGatt.setCharacteristicNotification(mBluetoothGattCharacteristic, <span class="keyword">true</span>);</span><br><span class="line"></span><br><span class="line">            BluetoothGattDescriptor mBluetoothGattDescriptor = mBluetoothGattCharacteristic.getDescriptor(uuid_descriptor);</span><br><span class="line">            <span class="keyword">if</span> (mBluetoothGattDescriptor != <span class="keyword">null</span>) &#123;</span><br><span class="line">                LogUtil.i(TAG, <span class="string">"成功设置 mBluetoothGattDescriptor"</span>);</span><br><span class="line">                mBluetoothGattDescriptor.setValue(BluetoothGattDescriptor.ENABLE_NOTIFICATION_VALUE);</span><br><span class="line">                mBluetoothGatt.writeDescriptor(mBluetoothGattDescriptor);</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (mBluetoothGatt == <span class="keyword">null</span>) &#123;</span><br><span class="line">            LogUtil.e(TAG, <span class="string">"mBluetoothGatt is null"</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (mBluetoothGattCharacteristic == <span class="keyword">null</span>) &#123;</span><br><span class="line">            LogUtil.e(TAG, <span class="string">"mBluetoothGattCharacteristic is null"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>然后会回调 <code>onDescriptorWrite</code></p><h2 id="写入-Characteristic"><a href="#写入-Characteristic" class="headerlink" title="写入 Characteristic"></a>写入 Characteristic</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 写入 Characteristic</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uuid_service</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> uuid_characteristic</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> value</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">writeCharacteristic</span><span class="params">(UUID uuid_service, UUID uuid_characteristic, <span class="keyword">byte</span>[] value)</span> </span>&#123;</span><br><span class="line">    BluetoothGattService mBluetoothGattService = getBluetoothGATTService(mBluetoothGatt, uuid_service);</span><br><span class="line"></span><br><span class="line">    BluetoothGattCharacteristic mBluetoothGattCharacteristic = getBluetoothGattCharacteristic(mBluetoothGattService, uuid_characteristic);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (mBluetoothGatt != <span class="keyword">null</span> &amp;&amp; mBluetoothGattCharacteristic != <span class="keyword">null</span>) &#123;</span><br><span class="line">        mBluetoothGattCharacteristic.setValue(value);</span><br><span class="line">        mBluetoothGattCharacteristic.setWriteType(BluetoothGattCharacteristic.WRITE_TYPE_NO_RESPONSE);</span><br><span class="line">        mBluetoothGatt.writeCharacteristic(mBluetoothGattCharacteristic);</span><br><span class="line"></span><br><span class="line">    &#125;<span class="keyword">else</span> <span class="keyword">if</span> (mBluetoothGatt == <span class="keyword">null</span>) &#123;</span><br><span class="line">        LogUtil.e(TAG, <span class="string">"mBluetoothGatt is null"</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (mBluetoothGattCharacteristic == <span class="keyword">null</span>) &#123;</span><br><span class="line">        LogUtil.e(TAG, <span class="string">"mBluetoothGattCharacteristic is null"</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>则先回调 <code>onCharacteristicWrite</code>，然后回调 <code>onCharacteristicChanged</code>。</p><h2 id="BluetoothGatt-的回调"><a href="#BluetoothGatt-的回调" class="headerlink" title="BluetoothGatt 的回调"></a>BluetoothGatt 的回调</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * BluetoothGatt 的回调</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> BluetoothGattCallback mGattCallback = <span class="keyword">new</span> BluetoothGattCallback() &#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onConnectionStateChange</span><span class="params">(BluetoothGatt gatt, <span class="keyword">int</span> status, <span class="keyword">int</span> newState)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onConnectionStateChange(gatt, status, newState);</span><br><span class="line">        <span class="keyword">if</span> (newState == BluetoothProfile.STATE_CONNECTED) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (status == BluetoothGatt.GATT_SUCCESS) &#123;</span><br><span class="line">                LogUtil.i(TAG, <span class="string">"Connected To GATT Server"</span>);</span><br><span class="line">                LogUtil.i(TAG, <span class="string">"Attempting To Start Service Discovery:"</span> + mBluetoothGatt.discoverServices());</span><br><span class="line">                broadcastUpdate(ACTION_GATT_CONNECTED);</span><br><span class="line"></span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                disconnect();</span><br><span class="line">                close();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; <span class="keyword">else</span> <span class="keyword">if</span> (newState == BluetoothProfile.STATE_DISCONNECTED) &#123;</span><br><span class="line">            close();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onServicesDiscovered</span><span class="params">(BluetoothGatt gatt, <span class="keyword">int</span> status)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onServicesDiscovered(gatt, status);</span><br><span class="line">        LogUtil.i(TAG, <span class="string">"onServicesDiscovered received: "</span> + status);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (status == BluetoothGatt.GATT_SUCCESS) &#123;</span><br><span class="line">            broadcastUpdate(ACTION_GATT_SERVICES_DISCOVERED_SUCCESS);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            LogUtil.i(TAG, <span class="string">"onServicesDiscovered received: "</span> + status);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDescriptorWrite</span><span class="params">(BluetoothGatt gatt, BluetoothGattDescriptor descriptor, <span class="keyword">int</span> status)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDescriptorWrite(gatt, descriptor, status);</span><br><span class="line">        <span class="keyword">if</span> (status == BluetoothGatt.GATT_SUCCESS) &#123;</span><br><span class="line">            broadcastUpdate(ACTION_GATT_DESCRIPTOR_WRITE_SUCCESS);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCharacteristicWrite</span><span class="params">(BluetoothGatt gatt, BluetoothGattCharacteristic characteristic, <span class="keyword">int</span> status)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCharacteristicWrite(gatt, characteristic, status);</span><br><span class="line">        <span class="keyword">if</span> (status == BluetoothGatt.GATT_SUCCESS)&#123;</span><br><span class="line">            broadcastUpdate(ACTION_GATT_CHARACTERISTIC_WRITE_SUCCESS);</span><br><span class="line">            <span class="comment">//LogUtil.i(TAG, "onCharacteristicWrite 返回的数据" + Arrays.toString(characteristic.getValue()));</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCharacteristicChanged</span><span class="params">(BluetoothGatt gatt, BluetoothGattCharacteristic characteristic)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCharacteristicChanged(gatt, characteristic);</span><br><span class="line">        LogUtil.i(TAG, <span class="string">"onCharacteristicChanged 返回的数据"</span> + Arrays.toString(characteristic.getValue()));</span><br><span class="line">        broadcastUpdate(ACTION_GATT_CHARACTERISTIC_DATA_REPLY, KEY_HOUR_DATA, characteristic.getValue());</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onCharacteristicRead</span><span class="params">(BluetoothGatt gatt, BluetoothGattCharacteristic characteristic, <span class="keyword">int</span> status)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onCharacteristicRead(gatt, characteristic, status);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onDescriptorRead</span><span class="params">(BluetoothGatt gatt, BluetoothGattDescriptor descriptor, <span class="keyword">int</span> status)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">super</span>.onDescriptorRead(gatt, descriptor, status);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><h2 id="发送广播"><a href="#发送广播" class="headerlink" title="发送广播"></a>发送广播</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 发送广播</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> action</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">broadcastUpdate</span><span class="params">(<span class="keyword">final</span> String action)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">final</span> Intent intent = <span class="keyword">new</span> Intent(action);</span><br><span class="line">    sendBroadcast(intent);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">private</span> <span class="keyword">void</span> <span class="title">broadcastUpdate</span><span class="params">(<span class="keyword">final</span> String action, String key, <span class="keyword">byte</span>[] value)</span></span>&#123;</span><br><span class="line">    <span class="keyword">final</span> Intent intent = <span class="keyword">new</span> Intent(action);</span><br><span class="line">    intent.putExtra(key, value);</span><br><span class="line">    sendBroadcast(intent);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><p><a href="https://blog.csdn.net/qingtiantianqing/article/details/52459629?locationNum=13" target="_blank" rel="noopener">Android蓝牙4.0 BLE开发坑总结</a></p></li><li><p><a href="http://a1anwang.com/post-18.html" target="_blank" rel="noopener">Android BLE 多次writeCharacteristic 为什么只有一个回调</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;开发流程&quot;&gt;&lt;a href=&quot;#开发流程&quot; class=&quot;headerlink&quot; title=&quot;开发流程&quot;&gt;&lt;/a&gt;开发流程&lt;/h1&gt;&lt;h2 id=&quot;声明-BLE-权限&quot;&gt;&lt;a href=&quot;#声明-BLE-权限&quot; class=&quot;headerlink&quot; title=&quot;声明 BLE 权限&quot;&gt;&lt;/a&gt;声明 BLE 权限&lt;/h2&gt;&lt;p&gt;在 AndroidManifest 中添加：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;uses-permission android:name=&lt;span class=&quot;string&quot;&gt;&quot;android.permission.BLUETOOTH&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;uses-permission android:name=&lt;span class=&quot;string&quot;&gt;&quot;android.permission.BLUETOOTH_ADMIN&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- &lt;span class=&quot;number&quot;&gt;6.0&lt;/span&gt; 之后需要位置权限--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;uses-permission android:name=&lt;span class=&quot;string&quot;&gt;&quot;android.permission.ACCESS_COARSE_LOCATION&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;uses-permission android:name=&lt;span class=&quot;string&quot;&gt;&quot;android.permission.ACCESS_FINE_LOCATION&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
      <category term="BLE" scheme="http://yoursite.com/categories/Android/BLE/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="BLE 4.0" scheme="http://yoursite.com/tags/BLE-4-0/"/>
    
  </entry>
  
  <entry>
    <title>BLE 手环开发总结</title>
    <link href="http://yoursite.com/2018/07/05/%E6%89%8B%E7%8E%AF%E5%BC%80%E5%8F%91%E6%80%BB%E7%BB%93/"/>
    <id>http://yoursite.com/2018/07/05/手环开发总结/</id>
    <published>2018-07-05T03:04:25.000Z</published>
    <updated>2018-07-07T03:18:41.601Z</updated>
    
    <content type="html"><![CDATA[<h1 id="基础功能"><a href="#基础功能" class="headerlink" title="基础功能"></a>基础功能</h1><ul><li>显示步数、距离、卡路里、电量、目标完成状况</li></ul><a id="more"></a><h1 id="功能实现过程"><a href="#功能实现过程" class="headerlink" title="功能实现过程"></a>功能实现过程</h1><ul><li><p>通过手机蓝牙与手环连接，手机 APP 发送个人设置数据给手环；当手环接收数据成功后，更新用户信息，同时返回<code>当前时刻</code>到<code>上一次同步数据时刻</code>的数据（注：数据以1小时为单位，返回的每个1小时数据是<code>每个1小时的累计数据</code>)，这次返回的数据中含有<code>掉电标志字节</code>，用于判断本次数据同步是<code>正常</code>还是<code>掉电后重新上电后的第一次同步</code>。</p></li><li><p>手机 APP 发送请求同步手环屏幕当前显示数据的数据给手环；手环接收数据成功后，返回<code>步数</code>、<code>距离</code>、<code>卡路里</code>、<code>电量</code>的数据。</p></li><li><p>手机 APP 发送请求同步手环72个小时数据的数据给手环；手环接收数据成功后，返回<code>步数</code>、<code>卡路里</code>、<code>每个小时的 UTC 秒数</code>的数据。</p></li></ul><h1 id="开发辅助"><a href="#开发辅助" class="headerlink" title="开发辅助"></a>开发辅助</h1><h2 id="数据库框架"><a href="#数据库框架" class="headerlink" title="数据库框架"></a>数据库框架</h2><p><a href="https://github.com/greenrobot/greenDAO" target="_blank" rel="noopener">greenDAO</a></p><p>简书上面的参考资料：</p><ul><li><a href="https://www.jianshu.com/p/b017ca5fe0ab" target="_blank" rel="noopener">Android Study 之 玩转GreenDao 3.2.2 点滴提升逼格~</a></li></ul><h2 id="数据库调试"><a href="#数据库调试" class="headerlink" title="数据库调试"></a>数据库调试</h2><p><a href="https://github.com/amitshekhariitbhu/Android-Debug-Database" target="_blank" rel="noopener">Android-Debug-Database</a></p><h2 id="智能刷新框架"><a href="#智能刷新框架" class="headerlink" title="智能刷新框架"></a>智能刷新框架</h2><p><a href="https://github.com/scwang90/SmartRefreshLayout" target="_blank" rel="noopener">SmartRefreshLayout</a></p><h2 id="图表显示框架"><a href="#图表显示框架" class="headerlink" title="图表显示框架"></a>图表显示框架</h2><p><a href="https://github.com/PhilJay/MPAndroidChart" target="_blank" rel="noopener">MPAndroidChart</a></p><p>CSDN 上面的两篇参考资料：</p><ul><li><a href="https://blog.csdn.net/ww897532167/article/details/77334345" target="_blank" rel="noopener">Android图表控件MPAndroidChart的简单介绍（MPAndroidChart3.0</a></li><li><a href="https://blog.csdn.net/u014136472/article/details/50273309" target="_blank" rel="noopener">MPAndroidChart 教程</a></li></ul><h2 id="Fragment-切换指示器"><a href="#Fragment-切换指示器" class="headerlink" title="Fragment 切换指示器"></a>Fragment 切换指示器</h2><p><a href="https://github.com/chenupt/SpringIndicator" target="_blank" rel="noopener">SpringIndicator</a></p><h2 id="自定义选择器框架"><a href="#自定义选择器框架" class="headerlink" title="自定义选择器框架"></a>自定义选择器框架</h2><p><a href="https://github.com/gzu-liyujiang/AndroidPicker" target="_blank" rel="noopener">AndroidPicker</a></p><h1 id="遇到的问题"><a href="#遇到的问题" class="headerlink" title="遇到的问题"></a>遇到的问题</h1><ul><li>BLE 以6.0版本为界限的开发流程、GATT 规范</li><li>Java 获取当前时间以及各种转换</li><li>ViewPager + Fragment 使用</li><li>Activity 和 Fragment 跳转、数据交互</li><li>BottomNavigationView 使用</li><li>Broadcast 使用</li><li>Service 使用</li><li>Intent 使用</li><li>异步使用</li><li>enum</li><li>自定义 View 参考：<a href="https://blog.csdn.net/ccy0122/article/details/53241648" target="_blank" rel="noopener">仿支付宝芝麻信用的仪表盘</a><br><a href="http://www.gcssloop.com/customview/CustomViewIndex/" target="_blank" rel="noopener">安卓自定义View教程</a></li><li>Fragment 的 add、hide、show。简书收藏几篇文章</li><li>由于手环储存的步数数据仅为1个小时的累计，所以当用图表显示月、年的时候，需要对数据进行处理</li><li>实时监控手机的网络、蓝牙状态变化</li><li>蓝牙、定位、位置服务权限申请</li><li>byte[] 数组对应天数开关处理</li><li>Fragment 的接口回调</li><li>自定义一个 NoScrollViewPagerAdapter</li><li>自定义一个 LogUtil</li><li>RecyclerView 使用</li><li>Bundle 使用</li></ul><h1 id="改进"><a href="#改进" class="headerlink" title="改进"></a>改进</h1><ul><li>引入 ButterKnife</li><li>使用异步加载图表数据，现在加载月、年数据比较慢</li><li>同步时间过长之后，再次同步一次会出现数据错乱情况</li><li>引入网络数据</li><li>引入 Google 的 easypermissions 作为权限获取库</li></ul>]]></content>
    
    <summary type="html">
    
      &lt;h1 id=&quot;基础功能&quot;&gt;&lt;a href=&quot;#基础功能&quot; class=&quot;headerlink&quot; title=&quot;基础功能&quot;&gt;&lt;/a&gt;基础功能&lt;/h1&gt;&lt;ul&gt;
&lt;li&gt;显示步数、距离、卡路里、电量、目标完成状况&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="BLE 4.0" scheme="http://yoursite.com/tags/BLE-4-0/"/>
    
  </entry>
  
  <entry>
    <title>ICON 资源网站</title>
    <link href="http://yoursite.com/2018/07/05/ICON%20%E8%B5%84%E6%BA%90%E7%BD%91%E7%AB%99/"/>
    <id>http://yoursite.com/2018/07/05/ICON 资源网站/</id>
    <published>2018-07-05T02:50:21.000Z</published>
    <updated>2018-07-05T02:59:24.522Z</updated>
    
    <content type="html"><![CDATA[<ul><li><p><a href="http://romannurik.github.io/AndroidAssetStudio/index.html" target="_blank" rel="noopener">Android Asset Studio</a></p></li><li><p><a href="https://www.materialpalette.com/icons" target="_blank" rel="noopener">Material Palette</a></p></li><li><p><a href="https://www.easyicon.net/" target="_blank" rel="noopener">easyicon</a></p></li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;ul&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://romannurik.github.io/AndroidAssetStudio/index.html&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Android Asset Studio&lt;/a&gt;&lt;/p&gt;

      
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="ICON" scheme="http://yoursite.com/tags/ICON/"/>
    
  </entry>
  
  <entry>
    <title>MPAndroidChart 翻译</title>
    <link href="http://yoursite.com/2018/07/02/MPAndroidChart%20%E7%BF%BB%E8%AF%91/"/>
    <id>http://yoursite.com/2018/07/02/MPAndroidChart 翻译/</id>
    <published>2018-07-02T04:39:10.000Z</published>
    <updated>2018-07-08T01:12:54.753Z</updated>
    
    <content type="html"><![CDATA[<p><a href="https://github.com/PhilJay/MPAndroidChart" target="_blank" rel="noopener">MPAndroidChart</a></p><h1 id="开始"><a href="#开始" class="headerlink" title="开始"></a>开始</h1><p>本章介绍使用此库的基本设置。</p><h2 id="添加依赖"><a href="#添加依赖" class="headerlink" title="添加依赖"></a>添加依赖</h2><p>作为第一步，将该库的依赖项添加到您的项目中。 如何添加依赖已经在此存储库的用法部分中进行了介绍。 推荐使用 Gradle 方式作为添加依赖的方式。</p><h2 id="创建界面"><a href="#创建界面" class="headerlink" title="创建界面"></a>创建界面</h2><p>使用 <code>LineChart</code>, <code>BarChart</code>, <code>ScatterChart</code>, <code>CandleStickChart</code>, <code>PieChart</code>, <code>BubbleChart</code> or <code>RadarChart</code> ，在 .xml 中定义：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;com.github.mikephil.charting.charts.LineChart</span><br><span class="line">        android:id=<span class="string">"@+id/chart"</span></span><br><span class="line">        android:layout_width=<span class="string">"match_parent"</span></span><br><span class="line">        android:layout_height=<span class="string">"match_parent"</span> /&gt;</span><br></pre></td></tr></table></figure></p><p>然后从 <code>Activity</code>,  <code>Fragment</code> or <code>whatever</code> 中取回：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// in this example, a LineChart is initialized from xml</span></span><br><span class="line">LineChart chart = (LineChart) findViewById(R.id.chart);</span><br></pre></td></tr></table></figure></p><p>或者使用代码来创建（跟着在 layout 添加）<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// programmatically create a LineChart</span></span><br><span class="line">LineChart chart = <span class="keyword">new</span> LineChart(Context);</span><br><span class="line"></span><br><span class="line"><span class="comment">// get a layout defined in xml</span></span><br><span class="line">RelativeLayout rl = (RelativeLayout) findViewById(R.id.relativeLayout);</span><br><span class="line">rl.add(chart); <span class="comment">// add the programmatically created chart</span></span><br></pre></td></tr></table></figure></p><h2 id="添加数据"><a href="#添加数据" class="headerlink" title="添加数据"></a>添加数据</h2><p>在获得图表实例后，你可以创建数据并且添加到图表。这个例子使用的是 LineChart，<code>Entry</code> 类代表图表中一个点的 X，Y 坐标。其他图表类型，例如 BarChart 使用 <code>BarEntry</code>。<br>添加数据到图表，将每一个数据代入到 <code>Entry</code> 中，例如：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">YourData[] dataObjects = ...;</span><br><span class="line"></span><br><span class="line">List&lt;Entry&gt; entries = <span class="keyword">new</span> ArrayList&lt;Entry&gt;();</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (YourData data : dataObjects) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// turn your data into Entry objects</span></span><br><span class="line">    entries.add(<span class="keyword">new</span> Entry(data.getValueX(), data.getValueY()));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>下一步，将 List<entry> 添加到 <code>LineDataSet</code>。DataSet 对象保存数据，同时允许单独设置数据的样式。如果启用，下面使用的“标签”仅具有描述性目的，并显示在图表中。<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LineDataSet dataSet = <span class="keyword">new</span> LineDataSet(entries, <span class="string">"Label"</span>); <span class="comment">// add entries to dataset</span></span><br><span class="line">dataSet.setColor(...);</span><br><span class="line">dataSet.setValueTextColor(...); <span class="comment">// styling, ...</span></span><br></pre></td></tr></table></figure></entry></p><p>最后一步，添加 LineDataSet 对象到 LineData 对象。这个对象持有 chart 实例的所有数据，并允许有单独样式。在你建立数据对象后，你可以使用它建立图表并刷新：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">LineData lineData = <span class="keyword">new</span> LineData(dataSet);</span><br><span class="line">chart.setData(lineData);</span><br><span class="line">chart.invalidate(); <span class="comment">// refresh</span></span><br></pre></td></tr></table></figure></p><p>请考虑到上面的仅仅是基本应用。需要更详细的扩展应用，请参考 <a href="https://github.com/PhilJay/MPAndroidChart/wiki/Setting-Data" target="_blank" rel="noopener">setting data</a> 部分，其中有很多添加数据到不同 <code>chart</code> 类型图表的例子。</p><h2 id="样式"><a href="#样式" class="headerlink" title="样式"></a>样式</h2><p>有关图表外观和数据的设置和样式的信息，请参考 <a href="https://github.com/PhilJay/MPAndroidChart/wiki/General-Chart-Settings-&amp;-Styling" target="_blank" rel="noopener">general settings &amp; styling</a> 部分。关于单个图表类型的更具体的样式和设置，请参考 <a href="https://github.com/PhilJay/MPAndroidChart/wiki/Specific-chart-settings" target="_blank" rel="noopener">specific settings &amp; styling</a>。</p><h1 id="与图表交互"><a href="#与图表交互" class="headerlink" title="与图表交互"></a>与图表交互</h1><p>该库允许您完全自定义与图表视图的可能触摸（和手势）交互，并通过回调方法对交互作出反应。</p><h2 id="启用-禁用交互"><a href="#启用-禁用交互" class="headerlink" title="启用/禁用交互"></a>启用/禁用交互</h2><ul><li><code>setTouchEnabled(boolean enabled)</code> 允许启用/禁用与图表的所有可能的触摸交互。</li><li><code>setDragEnabled(boolean enabled)</code> 启用/禁用图表的拖动（平移）。</li><li><code>setScaleEnabled(boolean enabled)</code> 启用/禁用两个轴上的图表缩放。</li><li><code>setScaleXEnabled(boolean enabled)</code> 启用/禁用 X 轴缩放。</li><li><code>setScaleYEnabled(boolean enabled)</code> 启用/禁用 Y 轴缩放。</li><li><code>setPinchZoom(boolean enabled)</code> 如果设置为 <code>true</code>，则启用缩放。如果禁用，则可以单独缩放 X 轴和 Y 轴。</li><li><code>setDoubleTapToZoomEnabled(boolean enabled)</code> 将此设置为 <code>false</code> 以禁止通过双击来缩放图表。</li></ul><h2 id="图表抛物线-减速"><a href="#图表抛物线-减速" class="headerlink" title="图表抛物线/减速"></a>图表抛物线/减速</h2><ul><li><code>setDragDecelerationEnabled(boolean enabled)</code> 如果设置为 <code>true</code>，则图表会在触摸后继续滚动。 默认值：<code>true</code>。</li><li><code>setDragDecelerationFrictionCoef(float coef)</code> 减速摩擦系数在 <code>[0; 1]</code> 之间，较高的值表示<code>速度将缓慢下降</code>，例如，如果设置为 <code>0</code>，它将立即停止。 <code>1</code> 是无效值，将自动转换为 <code>0.9999</code>。</li></ul><h2 id="突出显示值"><a href="#突出显示值" class="headerlink" title="突出显示值"></a>突出显示值</h2><p>如何允许通过点击手势和编程方式，突出显示条目在 <a href="https://github.com/PhilJay/MPAndroidChart/wiki/Highlighting" target="_blank" rel="noopener">highlightning section</a> 中进行了描述。</p><h2 id="手势回调"><a href="#手势回调" class="headerlink" title="手势回调"></a>手势回调</h2><p><code>OnChartGestureListener</code> 将允许您对图表上的手势做出反应：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnChartGestureListener</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Callbacks when a touch-gesture has started on the chart (ACTION_DOWN)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> me</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> lastPerformedGesture</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onChartGestureStart</span><span class="params">(MotionEvent me, ChartTouchListener.ChartGesture lastPerformedGesture)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Callbacks when a touch-gesture has ended on the chart (ACTION_UP, ACTION_CANCEL)</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> me</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> lastPerformedGesture</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">onChartGestureEnd</span><span class="params">(MotionEvent me, ChartTouchListener.ChartGesture lastPerformedGesture)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Callbacks when the chart is longpressed.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> me</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onChartLongPressed</span><span class="params">(MotionEvent me)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Callbacks when the chart is double-tapped.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> me</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onChartDoubleTapped</span><span class="params">(MotionEvent me)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Callbacks when the chart is single-tapped.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> me</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onChartSingleTapped</span><span class="params">(MotionEvent me)</span></span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Callbacks then a fling gesture is made on the chart.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> me1</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> me2</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> velocityX</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> velocityY</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onChartFling</span><span class="params">(MotionEvent me1, MotionEvent me2, <span class="keyword">float</span> velocityX, <span class="keyword">float</span> velocityY)</span></span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">     * Callbacks when the chart is scaled / zoomed via pinch zoom gesture.</span></span><br><span class="line"><span class="comment">     *</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> me</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scaleX scalefactor on the x-axis</span></span><br><span class="line"><span class="comment">     * <span class="doctag">@param</span> scaleY scalefactor on the y-axis</span></span><br><span class="line"><span class="comment">     */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onChartScale</span><span class="params">(MotionEvent me, <span class="keyword">float</span> scaleX, <span class="keyword">float</span> scaleY)</span></span>;</span><br><span class="line"></span><br><span class="line">   <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Callbacks when the chart is moved / translated via drag gesture.</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> me</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> dX translation distance on the x-axis</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> dY translation distance on the y-axis</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onChartTranslate</span><span class="params">(MotionEvent me, <span class="keyword">float</span> dX, <span class="keyword">float</span> dY)</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>只需让你接收回调的类实现这个接口，并将其设置为图表的监听器：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">chart.setOnChartGestureListener(this);</span><br></pre></td></tr></table></figure></p><h1 id="高亮显示值"><a href="#高亮显示值" class="headerlink" title="高亮显示值"></a>高亮显示值</h1><p>本节重点介绍通过 <code>tap-gesture</code> 和基于发行版 v3.0.0 以编程方式，高亮显示图表中条目的主题。</p><h2 id="启用-禁用高亮显示"><a href="#启用-禁用高亮显示" class="headerlink" title="启用/禁用高亮显示"></a>启用/禁用高亮显示</h2><ul><li><code>setHighlightPerDragEnabled(boolean enabled)</code> 在图表上将此设置为 <code>true</code>，以便在完全缩小时，在图表表面上进行每次<code>拖动</code>时高亮显示。 默认值： <code>true</code></li><li><code>setHighlightPerTapEnabled(boolean enabled)</code> 在图表上将此设置为 <code>false</code>，以防止通过<code>点击手势</code>高亮显示值。 但仍可通过拖动或以编程方式高亮显示值。 默认值： <code>true</code></li><li><code>setMaxHighlightDistance(float distanceDp)</code> 在 <code>dp</code> 中设置最大的高光距离。在图表上轻敲远离条目的距离，不会触发高亮显示。 默认值： <code>500dp</code></li></ul><p>除此之外，还可以为各个 <code>DataSet</code> 对象配置高亮显示：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">dataSet.setHighlightEnabled(<span class="keyword">true</span>); <span class="comment">// allow highlighting for DataSet</span></span><br><span class="line"></span><br><span class="line"> <span class="comment">// set this to false to disable the drawing of highlight indicator (lines)</span></span><br><span class="line"> dataSet.setDrawHighlightIndicators(<span class="keyword">true</span>);</span><br><span class="line"> dataSet.setHighlightColor(Color.BLACK); <span class="comment">// color for highlight indicator</span></span><br><span class="line"> <span class="comment">// and more...</span></span><br></pre></td></tr></table></figure></p><h2 id="以编程方式突出显示"><a href="#以编程方式突出显示" class="headerlink" title="以编程方式突出显示"></a>以编程方式突出显示</h2><ul><li><code>highlightValue(float x, int dataSetIndex, boolean callListener)</code> 高亮显示给定 <code>DataSet</code> 中给定 <code>x</code>位置的值。 提供 <code>-1</code> 作为 <code>dataSetIndex</code> 以撤消所有高亮显示。<code>布尔标志</code>确定是否应该调用选择侦听器。</li><li><code>highlightValue(Highlight high, boolean callListener)</code> 高亮显示提供的 <code>Highlight对象</code> 所代表的值。提供 <code>null</code> 以撤消所有高亮显示。<code>布尔标志</code>确定是否应该调用选择侦听器。</li><li><code>highlightValues(Highlight[] highs)</code> 高亮显示给定 <code>Highlight []</code> 数组所表示的值。提供 <code>null</code> 或<code>空数组</code>以撤消所有高亮显示。</li><li><p><code>getHighlighted()</code> 返回 <code>Highlight []</code> 数组，其中包含有关所有高亮显示的条目，<code>x-index</code> 和 <code>dataset-index</code> 的信息。</p><h2 id="选择回调"><a href="#选择回调" class="headerlink" title="选择回调"></a>选择回调</h2><p>该库在交互时为回调提供了许多侦听器。 其中一个是 <code>OnChartValueSelectedListener</code>，用于通过触控高亮显示值时的回调：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"> <span class="keyword">public</span> <span class="class"><span class="keyword">interface</span> <span class="title">OnChartValueSelectedListener</span> </span>&#123;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Called when a value has been selected inside the chart.</span></span><br><span class="line"><span class="comment">    *</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> e The selected Entry.</span></span><br><span class="line"><span class="comment">    * <span class="doctag">@param</span> h The corresponding highlight object that contains information</span></span><br><span class="line"><span class="comment">    * about the highlighted position</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onValueSelected</span><span class="params">(Entry e, Highlight h)</span></span>;</span><br><span class="line">    <span class="comment">/**</span></span><br><span class="line"><span class="comment">    * Called when nothing has been selected or an "un-select" has been made.</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">onNothingSelected</span><span class="params">()</span></span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><p>只需让你的接收回调的类，实现这个接口并将其设置为图表的监听器：<br><code>chart.setOnChartValueSelectedListener(this);</code></p><h2 id="高亮的类"><a href="#高亮的类" class="headerlink" title="高亮的类"></a>高亮的类</h2><p><code>Highlight类</code> 表示与高亮显示的 <code>Entry</code> 关联的所有数据，例如高亮显示的 <code>Entry对象</code> 本身，它所属的 <code>DataSet</code>，它在绘图表面上的位置等等。它可用于获取有关已高亮显示的条目的信息，或用于向图表提供要高亮显示的条目的信息。关于这个目的，<code>Highlight类</code> 提供了两个构造函数：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/** constructor for standard highlight */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Highlight</span><span class="params">(<span class="keyword">float</span> x, <span class="keyword">int</span> dataSetIndex)</span> </span>&#123; ... &#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/** constructor for stacked BarEntry highlight */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="title">Highlight</span><span class="params">(<span class="keyword">float</span> x, <span class="keyword">int</span> dataSetIndex, <span class="keyword">int</span> stackIndex)</span> </span>&#123; ... &#125;</span><br></pre></td></tr></table></figure></p><p>这些构造函数可用于创建 <code>Highlight对象</code>，该对象允许以编程方式执行突出显示：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// highlight the entry and x-position 50 in the first (0) DataSet</span></span><br><span class="line">Highlight highlight = <span class="keyword">new</span> Highlight(<span class="number">50f</span>, <span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">chart.highlightValue(highlight, <span class="keyword">false</span>); <span class="comment">// highlight this value, don't call listener</span></span><br></pre></td></tr></table></figure></p><h2 id="自定义高亮"><a href="#自定义高亮" class="headerlink" title="自定义高亮"></a>自定义高亮</h2><p>所有用户输入的高亮手势形式，都由默认的 <code>ChartHighlighter类</code> 在内部处理。使用以下方法，用自定义实现替换默认的 <code>highligher</code>：</p><ul><li><code>setHighlighter（ChartHighlighter highlighter）</code> 为图表设置自定义 <code>highligher对象</code>，以处理在图表视图上执行的所有高亮触摸事件。您自定义的 <code>highlighter对象</code> 需要继承 <code>ChartHighlighter类</code>。</li></ul>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;a href=&quot;https://github.com/PhilJay/MPAndroidChart&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;MPAndroidChart&lt;/a&gt;&lt;/p&gt;
&lt;h1 id=&quot;开始&quot;&gt;&lt;a href=&quot;#开始&quot; class
      
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
      <category term="Chart" scheme="http://yoursite.com/categories/Android/Chart/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="Chart" scheme="http://yoursite.com/tags/Chart/"/>
    
      <category term="翻译" scheme="http://yoursite.com/tags/%E7%BF%BB%E8%AF%91/"/>
    
  </entry>
  
  <entry>
    <title>JSON 数据解析</title>
    <link href="http://yoursite.com/2018/06/26/JSON%20%E6%95%B0%E6%8D%AE%E8%A7%A3%E6%9E%90/"/>
    <id>http://yoursite.com/2018/06/26/JSON 数据解析/</id>
    <published>2018-06-25T18:21:16.000Z</published>
    <updated>2018-07-08T01:12:54.753Z</updated>
    
    <content type="html"><![CDATA[<h2 id="JSONObject-及-JSONArray-取值"><a href="#JSONObject-及-JSONArray-取值" class="headerlink" title="JSONObject 及 JSONArray 取值"></a>JSONObject 及 JSONArray 取值</h2><h3 id="String-转-JSONObject-或-JSONArray"><a href="#String-转-JSONObject-或-JSONArray" class="headerlink" title="String 转 JSONObject 或 JSONArray"></a>String 转 JSONObject 或 JSONArray</h3><pre><code>JSONArray jsonArray = JSONArray.fromObject(str);JSONObject jsonObject = JSONObject.fromObject(str);</code></pre><a id="more"></a><h3 id="JSONObject-中获取-JSONArray-或-String"><a href="#JSONObject-中获取-JSONArray-或-String" class="headerlink" title="JSONObject 中获取 JSONArray 或 String"></a>JSONObject 中获取 JSONArray 或 String</h3><pre><code>JSONObject jsonObject = new JSONObject(resource);String str = jsonObject.getString(&quot;str&quot;);//获取 sequences的值JSONArray sequencesArray = jsonObject.getJSONArray(&quot;sequences&quot;);</code></pre><p>JSONObject 中还有其它 get 方法。</p><h3 id="JSONArray-中获取-JSONObject-或-String"><a href="#JSONArray-中获取-JSONObject-或-String" class="headerlink" title="JSONArray 中获取 JSONObject 或 String"></a>JSONArray 中获取 JSONObject 或 String</h3><pre><code>JSONArray jsonArray = new JSONArray(resource);String str = jsonArray.getString(0);JSONObject jsonObject = jsonArray.getJSONObject(0);</code></pre><p>解析 json 格式的数据时要看清楚，最外面为 <code>{</code> 的是 JSONObject ，为 <code>[</code> 的是JSONArray。</p><h3 id="实例"><a href="#实例" class="headerlink" title="实例"></a>实例</h3><h4 id="JSONArray-中获取-JSONObject"><a href="#JSONArray-中获取-JSONObject" class="headerlink" title="JSONArray 中获取 JSONObject"></a>JSONArray 中获取 JSONObject</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Province</span> <span class="keyword">extends</span> <span class="title">DataSupport</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> id;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> String provinceName;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">int</span> provinceCode;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getId</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setId</span><span class="params">(<span class="keyword">int</span> id)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">getProvinceName</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> provinceName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setProvinceName</span><span class="params">(String provinceName)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.provinceName = provinceName;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">getProvinceCode</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> provinceCode;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">setProvinceCode</span><span class="params">(<span class="keyword">int</span> provinceCode)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">this</span>.provinceCode = provinceCode;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">JSON 数组 [&#123;&quot;id&quot;:1, &quot;name&quot;:北京&#125;,&#123;&quot;id&quot;:2, &quot;name&quot;:上海&#125;,&#123;&quot;id&quot;:3, &quot;name&quot;:天津&#125;,&#123;&quot;id&quot;:4, &quot;name&quot;:重庆&#125;,&#123;&quot;id&quot;:5, &quot;name&quot;:香港&#125;]</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">handleProvinceResponse</span><span class="params">(String response)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (!TextUtils.isEmpty(response)) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                JSONArray allProvinces = <span class="keyword">new</span> JSONArray(response);</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; allProvinces.length(); i++) &#123;</span><br><span class="line">                    JSONObject provinceObject = allProvinces.getJSONObject(i);</span><br><span class="line">                    Province province = <span class="keyword">new</span> Province();</span><br><span class="line">                    province.setProvinceName(provinceObject.getString(<span class="string">"name"</span>));</span><br><span class="line">                    province.setProvinceCode(provinceObject.getInt(<span class="string">"id"</span>));</span><br><span class="line">                    province.save();</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">catch</span> (JSONException e) &#123;</span><br><span class="line">                e.printStackTrace();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><h4 id="JSONObject-中获取-JSONArray，然后在从-JSONArray-中获取-JSONObject"><a href="#JSONObject-中获取-JSONArray，然后在从-JSONArray-中获取-JSONObject" class="headerlink" title="JSONObject 中获取 JSONArray，然后在从 JSONArray 中获取 JSONObject"></a>JSONObject 中获取 JSONArray，然后在从 JSONArray 中获取 JSONObject</h4><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Weather</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> String status;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Basic basic;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> AQI aqi;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Now now;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> Suggestion suggestion;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@SerializedName</span>(<span class="string">"daily_forecast"</span>)</span><br><span class="line">    <span class="keyword">public</span> List&lt;Forecast&gt; forecastList;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;&quot;HeWeather&quot;: [&#123;&quot;basic&quot;:&#123;&quot;cid&quot;:&quot;CN101300105&quot;,&quot;location&quot;:&quot;隆安&quot;,&quot;parent_city&quot;:&quot;南宁&quot;,&quot;admin_area&quot;:&quot;广西&quot;,&quot;cnty&quot;:&quot;中国&quot;,&quot;lat&quot;:&quot;23.17476273&quot;,&quot;lon&quot;:&quot;107.68865967&quot;,&quot;tz&quot;:&quot;+8.00&quot;,&quot;city&quot;:&quot;隆安&quot;,&quot;id&quot;:&quot;CN101300105&quot;,&quot;update&quot;:&#123;&quot;loc&quot;:&quot;2018-05-02 11:47&quot;,&quot;utc&quot;:&quot;2018-05-02 03:47&quot;&#125;&#125;,&quot;update&quot;:&#123;&quot;loc&quot;:&quot;2018-05-02 11:47&quot;,&quot;utc&quot;:&quot;2018-05-02 03:47&quot;&#125;,&quot;status&quot;:&quot;ok&quot;,&quot;now&quot;:&#123;&quot;cloud&quot;:&quot;25&quot;,&quot;cond_code&quot;:&quot;300&quot;,&quot;cond_txt&quot;:&quot;阵雨&quot;,&quot;fl&quot;:&quot;32&quot;,&quot;hum&quot;:&quot;71&quot;,&quot;pcpn&quot;:&quot;0.0&quot;,&quot;pres&quot;:&quot;1014&quot;,&quot;tmp&quot;:&quot;29&quot;,&quot;vis&quot;:&quot;10&quot;,&quot;wind_deg&quot;:&quot;107&quot;,&quot;wind_dir&quot;:&quot;东南风&quot;,&quot;wind_sc&quot;:&quot;1&quot;,&quot;wind_spd&quot;:&quot;4&quot;,&quot;cond&quot;:&#123;&quot;code&quot;:&quot;300&quot;,&quot;txt&quot;:&quot;阵雨&quot;&#125;&#125;,&quot;daily_forecast&quot;:[&#123;&quot;date&quot;:&quot;2018-05-02&quot;,&quot;cond&quot;:&#123;&quot;txt_d&quot;:&quot;中雨&quot;&#125;,&quot;tmp&quot;:&#123;&quot;max&quot;:&quot;30&quot;,&quot;min&quot;:&quot;23&quot;&#125;&#125;,&#123;&quot;date&quot;:&quot;2018-05-03&quot;,&quot;cond&quot;:&#123;&quot;txt_d&quot;:&quot;阵雨&quot;&#125;,&quot;tmp&quot;:&#123;&quot;max&quot;:&quot;27&quot;,&quot;min&quot;:&quot;22&quot;&#125;&#125;,&#123;&quot;date&quot;:&quot;2018-05-04&quot;,&quot;cond&quot;:&#123;&quot;txt_d&quot;:&quot;阵雨&quot;&#125;,&quot;tmp&quot;:&#123;&quot;max&quot;:&quot;28&quot;,&quot;min&quot;:&quot;23&quot;&#125;&#125;],&quot;hourly&quot;:[&#123;&quot;cloud&quot;:&quot;90&quot;,&quot;cond_code&quot;:&quot;305&quot;,&quot;cond_txt&quot;:&quot;小雨&quot;,&quot;dew&quot;:&quot;26&quot;,&quot;hum&quot;:&quot;83&quot;,&quot;pop&quot;:&quot;58&quot;,&quot;pres&quot;:&quot;1012&quot;,&quot;time&quot;:&quot;2018-05-02 13:00&quot;,&quot;tmp&quot;:&quot;30&quot;,&quot;wind_deg&quot;:&quot;188&quot;,&quot;wind_dir&quot;:&quot;南风&quot;,&quot;wind_sc&quot;:&quot;1-2&quot;,&quot;wind_spd&quot;:&quot;11&quot;&#125;,&#123;&quot;cloud&quot;:&quot;95&quot;,&quot;cond_code&quot;:&quot;305&quot;,&quot;cond_txt&quot;:&quot;小雨&quot;,&quot;dew&quot;:&quot;24&quot;,&quot;hum&quot;:&quot;85&quot;,&quot;pop&quot;:&quot;49&quot;,&quot;pres&quot;:&quot;1010&quot;,&quot;time&quot;:&quot;2018-05-02 16:00&quot;,&quot;tmp&quot;:&quot;30&quot;,&quot;wind_deg&quot;:&quot;172&quot;,&quot;wind_dir&quot;:&quot;南风&quot;,&quot;wind_sc&quot;:&quot;1-2&quot;,&quot;wind_spd&quot;:&quot;1&quot;&#125;,&#123;&quot;cloud&quot;:&quot;98&quot;,&quot;cond_code&quot;:&quot;305&quot;,&quot;cond_txt&quot;:&quot;小雨&quot;,&quot;dew&quot;:&quot;24&quot;,&quot;hum&quot;:&quot;87&quot;,&quot;pop&quot;:&quot;25&quot;,&quot;pres&quot;:&quot;1010&quot;,&quot;time&quot;:&quot;2018-05-02 19:00&quot;,&quot;tmp&quot;:&quot;29&quot;,&quot;wind_deg&quot;:&quot;173&quot;,&quot;wind_dir&quot;:&quot;南风&quot;,&quot;wind_sc&quot;:&quot;1-2&quot;,&quot;wind_spd&quot;:&quot;8&quot;&#125;,&#123;&quot;cloud&quot;:&quot;99&quot;,&quot;cond_code&quot;:&quot;305&quot;,&quot;cond_txt&quot;:&quot;小雨&quot;,&quot;dew&quot;:&quot;23&quot;,&quot;hum&quot;:&quot;89&quot;,&quot;pop&quot;:&quot;20&quot;,&quot;pres&quot;:&quot;1013&quot;,&quot;time&quot;:&quot;2018-05-02 22:00&quot;,&quot;tmp&quot;:&quot;28&quot;,&quot;wind_deg&quot;:&quot;27&quot;,&quot;wind_dir&quot;:&quot;东北风&quot;,&quot;wind_sc&quot;:&quot;1-2&quot;,&quot;wind_spd&quot;:&quot;9&quot;&#125;,&#123;&quot;cloud&quot;:&quot;99&quot;,&quot;cond_code&quot;:&quot;104&quot;,&quot;cond_txt&quot;:&quot;阴&quot;,&quot;dew&quot;:&quot;22&quot;,&quot;hum&quot;:&quot;90&quot;,&quot;pop&quot;:&quot;71&quot;,&quot;pres&quot;:&quot;1012&quot;,&quot;time&quot;:&quot;2018-05-03 01:00&quot;,&quot;tmp&quot;:&quot;25&quot;,&quot;wind_deg&quot;:&quot;5&quot;,&quot;wind_dir&quot;:&quot;北风&quot;,&quot;wind_sc&quot;:&quot;1-2&quot;,&quot;wind_spd&quot;:&quot;6&quot;&#125;,&#123;&quot;cloud&quot;:&quot;100&quot;,&quot;cond_code&quot;:&quot;306&quot;,&quot;cond_txt&quot;:&quot;中雨&quot;,&quot;dew&quot;:&quot;22&quot;,&quot;hum&quot;:&quot;93&quot;,&quot;pop&quot;:&quot;49&quot;,&quot;pres&quot;:&quot;1012&quot;,&quot;time&quot;:&quot;2018-05-03 04:00&quot;,&quot;tmp&quot;:&quot;24&quot;,&quot;wind_deg&quot;:&quot;2&quot;,&quot;wind_dir&quot;:&quot;北风&quot;,&quot;wind_sc&quot;:&quot;1-2&quot;,&quot;wind_spd&quot;:&quot;6&quot;&#125;,&#123;&quot;cloud&quot;:&quot;100&quot;,&quot;cond_code&quot;:&quot;104&quot;,&quot;cond_txt&quot;:&quot;阴&quot;,&quot;dew&quot;:&quot;22&quot;,&quot;hum&quot;:&quot;93&quot;,&quot;pop&quot;:&quot;34&quot;,&quot;pres&quot;:&quot;1013&quot;,&quot;time&quot;:&quot;2018-05-03 07:00&quot;,&quot;tmp&quot;:&quot;23&quot;,&quot;wind_deg&quot;:&quot;11&quot;,&quot;wind_dir&quot;:&quot;北风&quot;,&quot;wind_sc&quot;:&quot;1-2&quot;,&quot;wind_spd&quot;:&quot;10&quot;&#125;,&#123;&quot;cloud&quot;:&quot;100&quot;,&quot;cond_code&quot;:&quot;305&quot;,&quot;cond_txt&quot;:&quot;小雨&quot;,&quot;dew&quot;:&quot;22&quot;,&quot;hum&quot;:&quot;86&quot;,&quot;pop&quot;:&quot;70&quot;,&quot;pres&quot;:&quot;1015&quot;,&quot;time&quot;:&quot;2018-05-03 10:00&quot;,&quot;tmp&quot;:&quot;23&quot;,&quot;wind_deg&quot;:&quot;3&quot;,&quot;wind_dir&quot;:&quot;北风&quot;,&quot;wind_sc&quot;:&quot;1-2&quot;,&quot;wind_spd&quot;:&quot;2&quot;&#125;],&quot;aqi&quot;:&#123;&quot;city&quot;:&#123;&quot;aqi&quot;:&quot;51&quot;,&quot;pm25&quot;:&quot;29&quot;,&quot;qlty&quot;:&quot;良&quot;&#125;&#125;,&quot;suggestion&quot;:&#123;&quot;comf&quot;:&#123;&quot;type&quot;:&quot;comf&quot;,&quot;brf&quot;:&quot;较舒适&quot;,&quot;txt&quot;:&quot;白天有雨，从而使空气湿度加大，会使人们感觉有点儿闷热，但早晚的天气很凉爽、舒适。&quot;&#125;,&quot;sport&quot;:&#123;&quot;type&quot;:&quot;sport&quot;,&quot;brf&quot;:&quot;较不宜&quot;,&quot;txt&quot;:&quot;有较强降水，建议您选择在室内进行健身休闲运动。&quot;&#125;,&quot;cw&quot;:&#123;&quot;type&quot;:&quot;cw&quot;,&quot;brf&quot;:&quot;不宜&quot;,&quot;txt&quot;:&quot;不宜洗车，未来24小时内有雨，如果在此期间洗车，雨水和路上的泥水可能会再次弄脏您的爱车。&quot;&#125;&#125;&#125;]&#125;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 将返回的 JSON 数据解析成 Weather 实体类</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Weather <span class="title">parseWeatherResponse</span><span class="params">(String response)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">        JSONObject jsonObject = <span class="keyword">new</span> JSONObject(response);</span><br><span class="line">        JSONArray jsonArray = jsonObject.getJSONArray(<span class="string">"HeWeather"</span>);</span><br><span class="line">        String weatherContent = jsonArray.getJSONObject(<span class="number">0</span>).toString();</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> Gson().fromJson(weatherContent, Weather.class);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;JSONObject-及-JSONArray-取值&quot;&gt;&lt;a href=&quot;#JSONObject-及-JSONArray-取值&quot; class=&quot;headerlink&quot; title=&quot;JSONObject 及 JSONArray 取值&quot;&gt;&lt;/a&gt;JSONObject 及 JSONArray 取值&lt;/h2&gt;&lt;h3 id=&quot;String-转-JSONObject-或-JSONArray&quot;&gt;&lt;a href=&quot;#String-转-JSONObject-或-JSONArray&quot; class=&quot;headerlink&quot; title=&quot;String 转 JSONObject 或 JSONArray&quot;&gt;&lt;/a&gt;String 转 JSONObject 或 JSONArray&lt;/h3&gt;&lt;pre&gt;&lt;code&gt;JSONArray jsonArray = JSONArray.fromObject(str);
JSONObject jsonObject = JSONObject.fromObject(str);
&lt;/code&gt;&lt;/pre&gt;
    
    </summary>
    
      <category term="Android" scheme="http://yoursite.com/categories/Android/"/>
    
    
      <category term="Android" scheme="http://yoursite.com/tags/Android/"/>
    
      <category term="JSON" scheme="http://yoursite.com/tags/JSON/"/>
    
  </entry>
  
</feed>
